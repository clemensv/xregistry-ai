[
    {
        "id": "21st-dev/magic-mcp",
        "provider": "21st-dev",
        "server": "magic-mcp",
        "name": "io.github.21st-dev/magic-mcp",
        "description": "Magic Component Platform (MCP) is a powerful AI-driven tool that helps developers create beautiful, modern UI components instantly through natural language descriptions. It integrates seamlessly with popular IDEs and provides a streamlined workflow for UI development.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "66julienmartin/MCP-server-Deepseek_R1",
        "provider": "66julienmartin",
        "server": "MCP-server-Deepseek_R1",
        "name": "io.github.66julienmartin/MCP-server-Deepseek_R1",
        "description": "A Model Context Protocol (MCP) server implementation for the Deepseek R1 language model. Deepseek R1 is a powerful language model optimized for reasoning tasks with a context window of 8192 tokens.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "66julienmartin/MCP-server-Qwen_Max",
        "provider": "66julienmartin",
        "server": "MCP-server-Qwen_Max",
        "name": "io.github.66julienmartin/MCP-server-Qwen_Max",
        "description": "A Model Context Protocol (MCP) server implementation for the Qwen Max language model.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "aarora79/aws-cost-explorer-mcp-server",
        "provider": "aarora79",
        "server": "aws-cost-explorer-mcp-server",
        "name": "io.github.aarora79/aws-cost-explorer-mcp-server",
        "description": "An MCP server for getting AWS spend data via Cost Explorer and Amazon Bedrock usage data via Model invocation logs in Amazon Cloud Watch through Anthropic's MCP (Model Control Protocol). It exposes AWS Cost Explorer API functionality to Claude Desktop, allowing natural language queries about AWS spend.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "abel9851/mcp-server-mariadb",
        "provider": "abel9851",
        "server": "mcp-server-mariadb",
        "name": "io.github.abel9851/mcp-server-mariadb",
        "description": "An MCP server implementation for retrieving data from mariadb",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "abhiz123/todoist-mcp-server",
        "provider": "abhiz123",
        "server": "todoist-mcp-server",
        "name": "io.github.abhiz123/todoist-mcp-server",
        "description": "An MCP (Model Context Protocol) server implementation that integrates Claude with Todoist, enabling natural language task management. This server allows Claude to interact with your Todoist tasks using everyday language.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "adenot/mcp-google-search",
        "provider": "adenot",
        "server": "mcp-google-search",
        "name": "io.github.adenot/mcp-google-search",
        "description": "A Model Context Protocol server that provides web search capabilities using Google Custom Search API and webpage content extraction functionality.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "Adfin-Engineering/mcp-server-adfin",
        "provider": "Adfin-Engineering",
        "server": "mcp-server-adfin",
        "name": "io.github.Adfin-Engineering/mcp-server-adfin",
        "description": "MCP server implementation providing tools for filesystem operations and Adfin API interactions, enabling Claude Desktop integration.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "adityak74/mcp-scholarly",
        "provider": "adityak74",
        "server": "mcp-scholarly",
        "name": "io.github.adityak74/mcp-scholarly",
        "description": "A MCP server to search for accurate academic articles. More scholarly vendors will be added soon.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "agentrpc/agentrpc",
        "provider": "agentrpc",
        "server": "agentrpc",
        "name": "io.github.agentrpc/agentrpc",
        "description": "Universal RPC layer for AI agents across network boundaries and languages, supporting Model Context Protocol (MCP) and OpenAI-compatible tool definitions.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ahnlabio/bicscan-mcp",
        "provider": "ahnlabio",
        "server": "bicscan-mcp",
        "name": "io.github.ahnlabio/bicscan-mcp",
        "description": "A powerful and efficient Blockchain address risk scoring API MCP Server, leveraging the BICScan API to provide comprehensive risk assessments and asset information for blockchain addresses, domains, and decentralized applications (dApps).",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ahujasid/blender-mcp",
        "provider": "ahujasid",
        "server": "blender-mcp",
        "name": "io.github.ahujasid/blender-mcp",
        "description": "BlenderMCP connects Blender to Claude AI through the Model Context Protocol (MCP), allowing Claude to directly interact with and control Blender. This integration enables prompt assisted 3D modeling, scene creation, and manipulation.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "AI-Agent-Hub/ai-agent-marketplace-index-mcp",
        "provider": "AI-Agent-Hub",
        "server": "ai-agent-marketplace-index-mcp",
        "name": "io.github.AI-Agent-Hub/ai-agent-marketplace-index-mcp",
        "description": "MCP Server for AI Agent Marketplace Index from DeepNLP, allowing AI assistants to search available AI agents by keywords or category, including tools for searching AI agents and listing AI agents to the marketplace.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "AI-QL/chat-mcp",
        "provider": "AI-QL",
        "server": "chat-mcp",
        "name": "io.github.AI-QL/chat-mcp",
        "description": "A Cross-Platform Interface for LLMs utilizing the MCP (Model Context Protocol) to connect and interact with various Large Language Models (LLMs).",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "Aiven-Open/mcp-aiven",
        "provider": "Aiven-Open",
        "server": "mcp-aiven",
        "name": "io.github.Aiven-Open/mcp-aiven",
        "description": "A Model Context Protocol (MCP) server for Aiven providing access to Aiven services such as PostgreSQL, Kafka, ClickHouse, Valkey and OpenSearch, enabling LLMs to build full stack solutions.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "alexarevalo9/ticktick-mcp-server",
        "provider": "alexarevalo9",
        "server": "ticktick-mcp-server",
        "name": "io.github.alexarevalo9/ticktick-mcp-server",
        "description": "MCP Server for the TickTick API, enabling task management, project organization, habit tracking, and more.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "alibaba/higress",
        "provider": "alibaba",
        "server": "higress",
        "name": "io.github.alibaba/higress",
        "description": "Higress is a cloud-native API gateway based on Istio and Envoy, which supports hosting MCP (Model Context Protocol) Servers through its plugin mechanism, enabling AI Agents to easily call various tools and services.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "aliyun/alibabacloud-hologres-mcp-server",
        "provider": "aliyun",
        "server": "alibabacloud-hologres-mcp-server",
        "name": "io.github.aliyun/alibabacloud-hologres-mcp-server",
        "description": "Hologres MCP Server serves as a universal interface between AI Agents and Hologres databases. It enables seamless communication between AI Agents and Hologres, helping AI Agents retrieve Hologres database metadata and execute SQL operations.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "amornpan/py-mcp-line",
        "provider": "amornpan",
        "server": "py-mcp-line",
        "name": "io.github.amornpan/py-mcp-line",
        "description": "A Model Context Protocol server implementation in Python that provides access to LINE Bot messages. This server enables Language Models to read and analyze LINE conversations through a standardized interface.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "amornpan/py-mcp-mssql",
        "provider": "amornpan",
        "server": "py-mcp-mssql",
        "name": "io.github.amornpan/py-mcp-mssql",
        "description": "A Model Context Protocol server implementation in Python that provides access to Microsoft SQL Server databases. This server enables Language Models to inspect table schemas and execute SQL queries through a standardized interface.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "anshumax/world_bank_mcp_server",
        "provider": "anshumax",
        "server": "world_bank_mcp_server",
        "name": "io.github.anshumax/world_bank_mcp_server",
        "description": "A Model Context Protocol (MCP) server that enables interaction with the open World Bank data API. This server allows AI assistants to list indicators and analyse those indicators for the countries that are available with the World Bank.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "apache/iotdb-mcp-server",
        "provider": "apache",
        "server": "iotdb-mcp-server",
        "name": "io.github.apache/iotdb-mcp-server",
        "description": "A Model Context Protocol (MCP) server implementation that provides database interaction and business intelligence capabilities through IoTDB. This server enables running SQL queries.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "apeyroux/mcp-xmind",
        "provider": "apeyroux",
        "server": "mcp-xmind",
        "name": "io.github.apeyroux/mcp-xmind",
        "description": "A Model Context Protocol server for analyzing and querying XMind mind maps. This tool provides powerful capabilities for searching, extracting, and analyzing content from XMind files.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "apify/actors-mcp-server",
        "provider": "apify",
        "server": "actors-mcp-server",
        "name": "io.github.apify/actors-mcp-server",
        "description": "Implementation of an MCP server for all Apify Actors enabling interaction with one or more Apify Actors defined in the MCP Server configuration. Allows AI assistants to use Apify Actors as tools for various scraping and data extraction tasks.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "apimatic/apimatic-validator-mcp",
        "provider": "apimatic",
        "server": "apimatic-validator-mcp",
        "name": "io.github.apimatic/apimatic-validator-mcp",
        "description": "This repository provides a Model Context Protocol (MCP) Server for validating OpenAPI specifications using APIMatic. The server processes OpenAPI files and returns validation summaries by leveraging APIMatic’s API.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "AshDevFr/discourse-mcp-server",
        "provider": "AshDevFr",
        "server": "discourse-mcp-server",
        "name": "io.github.AshDevFr/discourse-mcp-server",
        "description": "Node.js server implementing Model Context Protocol (MCP) for Discourse search operation.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "AshikNesin/pushover-mcp",
        "provider": "AshikNesin",
        "server": "pushover-mcp",
        "name": "io.github.AshikNesin/pushover-mcp",
        "description": "A Model Context Protocol implementation for sending notifications via Pushover.net.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "asusevski/opendota-mcp-server",
        "provider": "asusevski",
        "server": "opendota-mcp-server",
        "name": "io.github.asusevski/opendota-mcp-server",
        "description": "A Model Context Protocol (MCP) server implementation for accessing OpenDota API data. This server enables LLMs and AI assistants to retrieve real-time Dota 2 statistics, match data, player information, and more through a standard interface.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "atharvagupta2003/mcp-stripe",
        "provider": "atharvagupta2003",
        "server": "mcp-stripe",
        "name": "io.github.atharvagupta2003/mcp-stripe",
        "description": "A Model Context Protocol (MCP) server implementation that integrates with Stripe for handling payments, customers, and refunds. This server provides a structured API to manage financial transactions securely.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "atlanhq/agent-toolkit",
        "provider": "atlanhq",
        "server": "agent-toolkit",
        "name": "io.github.atlanhq/agent-toolkit",
        "description": "A protocol server that enables interaction with Atlan services through function calling. Provides tools for asset search, and retrieval using pyatlan.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "AudienseCo/mcp-audiense-insights",
        "provider": "AudienseCo",
        "server": "mcp-audiense-insights",
        "name": "io.github.AudienseCo/mcp-audiense-insights",
        "description": "This server, based on the Model Context Protocol (MCP), allows Claude or any other MCP-compatible client to interact with your Audiense Insights account. It extracts marketing insights and audience analysis from Audiense reports, covering demographic, cultural, influencer, and content engagement analysis.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "Automata-Labs-team/code-sandbox-mcp",
        "provider": "Automata-Labs-team",
        "server": "code-sandbox-mcp",
        "name": "io.github.Automata-Labs-team/code-sandbox-mcp",
        "description": "A secure sandbox environment for executing code within Docker containers. This MCP server provides AI applications with a safe and isolated environment for running code while maintaining security through containerization.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "aws-samples/sample-mcp-server-s3",
        "provider": "aws-samples",
        "server": "sample-mcp-server-s3",
        "name": "io.github.aws-samples/sample-mcp-server-s3",
        "description": "An MCP server implementation for retrieving data such as PDF's from S3.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "awslabs/mcp",
        "provider": "awslabs",
        "server": "mcp",
        "name": "io.github.awslabs/mcp",
        "description": "A suite of specialized MCP servers that help you get the most out of AWS, wherever you use MCP.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "axiomhq/mcp-server-axiom",
        "provider": "axiomhq",
        "server": "mcp-server-axiom",
        "name": "io.github.axiomhq/mcp-server-axiom",
        "description": "A Model Context Protocol server implementation for Axiom that enables AI agents to query your data using Axiom Processing Language (APL). Works with Claude desktop app. Implements two MCP tools: queryApl and listDatasets. No support for MCP resources or prompts yet.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "baidubce/app-builder",
        "provider": "baidubce",
        "server": "app-builder",
        "name": "io.github.baidubce/app-builder",
        "description": "This server provides MCP (Model Context Protocol) tools for interacting with Baidu AppBuilder applications. It supports both stdio and SSE (Server-Sent Events) protocols.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "Bankless/onchain-mcp",
        "provider": "Bankless",
        "server": "onchain-mcp",
        "name": "io.github.Bankless/onchain-mcp",
        "description": "MCP (Model Context Protocol) server for blockchain data interaction through the Bankless API.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "baryhuang/mcp-headless-gmail",
        "provider": "baryhuang",
        "server": "mcp-headless-gmail",
        "name": "io.github.baryhuang/mcp-headless-gmail",
        "description": "A MCP (Model Context Protocol) server that provides get, send Gmails without local credential or token setup.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "baryhuang/mcp-server-aws-resources-python",
        "provider": "baryhuang",
        "server": "mcp-server-aws-resources-python",
        "name": "io.github.baryhuang/mcp-server-aws-resources-python",
        "description": "A Model Context Protocol (MCP) server implementation that provides running generated python code to query any AWS resources through boto3.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "basicmachines-co/basic-memory",
        "provider": "basicmachines-co",
        "server": "basic-memory",
        "name": "io.github.basicmachines-co/basic-memory",
        "description": "Basic Memory lets you build persistent knowledge through natural conversations with Large Language Models (LLMs) like Claude, while keeping everything in simple Markdown files on your computer. It uses the Model Context Protocol (MCP) to enable any compatible LLM to read and write to your local knowledge base.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "bazinga012/mcp_code_executor",
        "provider": "bazinga012",
        "server": "mcp_code_executor",
        "name": "io.github.bazinga012/mcp_code_executor",
        "description": "The MCP Code Executor is an MCP server that allows LLMs to execute Python code within a specified Conda environment. This enables LLMs to run code with access to libraries and dependencies defined in the Conda environment.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "benborla/mcp-server-mysql",
        "provider": "benborla",
        "server": "mcp-server-mysql",
        "name": "io.github.benborla/mcp-server-mysql",
        "description": "A Model Context Protocol server that provides access to MySQL databases. This server enables LLMs to inspect database schemas and execute SQL queries.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "bharathvaj-ganesan/whois-mcp",
        "provider": "bharathvaj-ganesan",
        "server": "whois-mcp",
        "name": "io.github.bharathvaj-ganesan/whois-mcp",
        "description": "Model Context Protocol server for whois lookups allowing AI agents to perform WHOIS lookups and retrieve domain details.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "bigcodegen/mcp-neovim-server",
        "provider": "bigcodegen",
        "server": "mcp-neovim-server",
        "name": "io.github.bigcodegen/mcp-neovim-server",
        "description": "A proof of concept integration between Claude Desktop (or any client) and Neovim using Model Context Protocol (MCP) and the official neovim/node-client JavaScript library. This server leverages Vim's native text editing commands and workflows, which Claude already understands, to create a lightweight code or general purpose AI text assistance layer.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "bitrise-io/bitrise-mcp",
        "provider": "bitrise-io",
        "server": "bitrise-mcp",
        "name": "io.github.bitrise-io/bitrise-mcp",
        "description": "MCP Server for the Bitrise API, enabling app management, build operations, artifact management and more.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "box-community/mcp-server-box",
        "provider": "box-community",
        "server": "mcp-server-box",
        "name": "io.github.box-community/mcp-server-box",
        "description": "MCP Server Box is a Python project that integrates with the Box API to perform various operations such as file search, text extraction, AI-based querying, and data extraction. It leverages the box-sdk-gen library and provides a set of tools to interact with Box files and folders. The Model Context Protocol (MCP) is used to facilitate seamless integration with the Box API, enabling efficient and scalable operations on Box files and folders.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "browserbase/mcp-server-browserbase",
        "provider": "browserbase",
        "server": "mcp-server-browserbase",
        "name": "io.github.browserbase/mcp-server-browserbase",
        "description": "This server provides cloud browser automation capabilities using Browserbase, Puppeteer, and Stagehand. It enables LLMs to interact with web pages, take screenshots, and execute JavaScript in a cloud browser environment.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "burningion/video-editing-mcp",
        "provider": "burningion",
        "server": "video-editing-mcp",
        "name": "io.github.burningion/video-editing-mcp",
        "description": "Server to upload, edit, search, and generate videos using Video Jungle and LLM integration with custom vj:// URI scheme and video editing tools.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "bytebase/dbhub",
        "provider": "bytebase",
        "server": "dbhub",
        "name": "io.github.bytebase/dbhub",
        "description": "DBHub is a universal database gateway implementing the Model Context Protocol (MCP) server interface. This gateway allows MCP-compatible clients to connect to and explore different databases.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "calvernaz/alphavantage",
        "provider": "calvernaz",
        "server": "alphavantage",
        "name": "io.github.calvernaz/alphavantage",
        "description": "A MCP server for the stock market data API, Alphavantage API.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "carterlasalle/mac_messages_mcp",
        "provider": "carterlasalle",
        "server": "mac_messages_mcp",
        "name": "io.github.carterlasalle/mac_messages_mcp",
        "description": "A Python bridge for interacting with the macOS Messages app using MCP (Multiple Context Protocol).",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "chaindead/telegram-mcp",
        "provider": "chaindead",
        "server": "telegram-mcp",
        "name": "io.github.chaindead/telegram-mcp",
        "description": "The server is a bridge between the Telegram API and the AI assistants and is based on the Model Context Protocol. It provides capabilities such as getting current account information, listing dialogs, marking dialogs as read, retrieving messages, and sending draft messages.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "chargebee/agentkit",
        "provider": "chargebee",
        "server": "agentkit",
        "name": "io.github.chargebee/agentkit",
        "description": "MCP server for interacting with Chargebee",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "chatmcp/mcp-server-chatsum",
        "provider": "chatmcp",
        "server": "mcp-server-chatsum",
        "name": "io.github.chatmcp/mcp-server-chatsum",
        "description": "This MCP Server is used to summarize your chat messages.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "chigwell/telegram-mcp",
        "provider": "chigwell",
        "server": "telegram-mcp",
        "name": "io.github.chigwell/telegram-mcp",
        "description": "A full-featured Telegram integration for Claude, Cursor, and any MCP-compatible client, powered by Telethon and the Model Context Protocol (MCP). This project lets you interact with your Telegram account programmatically, automating everything from messaging to group management.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ChristianHinge/dicom-mcp",
        "provider": "ChristianHinge",
        "server": "dicom-mcp",
        "name": "io.github.ChristianHinge/dicom-mcp",
        "description": "A Model Context Protocol server for DICOM (Digital Imaging and Communications in Medicine) interactions. This server provides tools to query and interact with DICOM servers, enabling Large Language Models to access and analyze medical imaging metadata.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ChristophEnglisch/keycloak-model-context-protocol",
        "provider": "ChristophEnglisch",
        "server": "keycloak-model-context-protocol",
        "name": "io.github.ChristophEnglisch/keycloak-model-context-protocol",
        "description": "A Model Context Protocol server for Keycloak administration, providing tools to manage users and realms.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "chroma-core/chroma-mcp",
        "provider": "chroma-core",
        "server": "chroma-mcp",
        "name": "io.github.chroma-core/chroma-mcp",
        "description": "This server provides data retrieval capabilities powered by Chroma, enabling AI models to create collections over generated data and user inputs, and retrieve that data using vector search, full text search, metadata filtering, and more.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ChronulusAI/chronulus-mcp",
        "provider": "ChronulusAI",
        "server": "chronulus-mcp",
        "name": "io.github.ChronulusAI/chronulus-mcp",
        "description": "Chronulus MCP provides access to the Chronulus AI platform of forecasting and prediction agents.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "CircleCI-Public/mcp-server-circleci",
        "provider": "CircleCI-Public",
        "server": "mcp-server-circleci",
        "name": "io.github.CircleCI-Public/mcp-server-circleci",
        "description": "Model Context Protocol (MCP) Server for CircleCI enabling natural language interaction with CircleCI pipelines and logs.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ckreiling/mcp-server-docker",
        "provider": "ckreiling",
        "server": "mcp-server-docker",
        "name": "io.github.ckreiling/mcp-server-docker",
        "description": "An MCP server for managing Docker with natural language! Compose containers, introspect and debug running containers, and manage persistent data with Docker volumes.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "clemensv/gh1",
        "provider": "clemensv",
        "server": "gh1",
        "name": "io.github.clemensv/mcp-servers",
        "description": "GitHub integration MCP server providing tooling and resource discovery via GitHub APIs",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "clemensv/google-maps",
        "provider": "clemensv",
        "server": "google-maps",
        "name": "io.github.clemensv/mcp-servers/google-maps",
        "description": "Google Maps integration MCP server providing geospatial tooling and data access using the Google Maps Platform APIs",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "clemensv/postgres",
        "provider": "clemensv",
        "server": "postgres",
        "name": "io.github.clemensv/mcp-servers/postgres",
        "description": "MCP server for resource discovery and metadata publication from PostgreSQL databases",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ClickHouse/mcp-clickhouse",
        "provider": "ClickHouse",
        "server": "mcp-clickhouse",
        "name": "io.github.ClickHouse/mcp-clickhouse",
        "description": "An MCP server for ClickHouse.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "cloudflare/mcp-server-cloudflare",
        "provider": "cloudflare",
        "server": "mcp-server-cloudflare",
        "name": "io.github.cloudflare/mcp-server-cloudflare",
        "description": "Model Context Protocol (MCP) server for Cloudflare's API enabling natural language interaction with Cloudflare account resources such as Workers, KV namespaces, R2 buckets, and D1 databases.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "co-browser/attestable-mcp-server",
        "provider": "co-browser",
        "server": "attestable-mcp-server",
        "name": "io.github.co-browser/attestable-mcp-server",
        "description": "remotely attestable MCP server that uses a trusted execution environment and RA-TLS for remote attestation between MCP clients and servers.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "co-browser/browser-use-mcp-server",
        "provider": "co-browser",
        "server": "browser-use-mcp-server",
        "name": "io.github.co-browser/browser-use-mcp-server",
        "description": "An MCP server that enables AI agents to control web browsers using browser-use.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "codacy/codacy-mcp-server",
        "provider": "codacy",
        "server": "codacy-mcp-server",
        "name": "io.github.codacy/codacy-mcp-server",
        "description": "MCP Server for the Codacy API, enabling access to repositories, files, quality, coverage, security and more.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "CodeLogicIncEngineering/codelogic-mcp-server",
        "provider": "CodeLogicIncEngineering",
        "server": "codelogic-mcp-server",
        "name": "io.github.CodeLogicIncEngineering/codelogic-mcp-server",
        "description": "An MCP Server to utilize Codelogic's rich software dependency data in your AI programming assistant.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "CoderGamester/mcp-unity",
        "provider": "CoderGamester",
        "server": "mcp-unity",
        "name": "io.github.CoderGamester/mcp-unity",
        "description": "MCP Unity is an implementation of the Model Context Protocol for Unity Editor, allowing AI assistants to interact with your Unity projects. This package provides a bridge between Unity and a Node.js server that implements the MCP protocol, enabling AI agents like Claude, Windsurf, and Cursor to execute operations within the Unity Editor.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "Coding-Solo/godot-mcp",
        "provider": "Coding-Solo",
        "server": "godot-mcp",
        "name": "io.github.Coding-Solo/godot-mcp",
        "description": "A Model Context Protocol (MCP) server for interacting with the Godot game engine. It enables AI assistants to launch the Godot editor, run Godot projects, capture debug output, and control project execution.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "comet-ml/opik-mcp",
        "provider": "comet-ml",
        "server": "opik-mcp",
        "name": "io.github.comet-ml/opik-mcp",
        "description": "A Model Context Protocol (MCP) implementation for the Opik platform. It provides a unified interface for interacting with Opik's capabilities, supporting multiple transport mechanisms for flexible integration into various environments.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ConechoAI/openai-websearch-mcp",
        "provider": "ConechoAI",
        "server": "openai-websearch-mcp",
        "name": "io.github.ConechoAI/openai-websearch-mcp",
        "description": "This MCP server provides access to OpenAI's websearch functionality through the Model Context Protocol. It allows AI assistants to search the web during conversations with users, providing up-to-date information that may not be available in the assistant's training data.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "cr7258/elasticsearch-mcp-server",
        "provider": "cr7258",
        "server": "elasticsearch-mcp-server",
        "name": "io.github.cr7258/elasticsearch-mcp-server",
        "description": "A Model Context Protocol (MCP) server implementation that provides Elasticsearch and OpenSearch interaction. This server enables searching documents, analyzing indices, and managing cluster through a set of tools.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "cyberchitta/llm-context.py",
        "provider": "cyberchitta",
        "server": "llm-context.py",
        "name": "io.github.cyberchitta/llm-context",
        "description": "A tool that helps developers quickly inject relevant content from code/text projects into Large Language Model chat interfaces, providing direct LLM integration through the Model Context Protocol (MCP).",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "cyberchitta/scrapling-fetch-mcp",
        "provider": "cyberchitta",
        "server": "scrapling-fetch-mcp",
        "name": "io.github.cyberchitta/scrapling-fetch-mcp",
        "description": "An MCP server that helps AI assistants access text content from websites that implement bot detection, bridging the gap between what you can see in your browser and what the AI can access.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "da-okazaki/mcp-neo4j-server",
        "provider": "da-okazaki",
        "server": "mcp-neo4j-server",
        "name": "io.github.da-okazaki/mcp-neo4j-server",
        "description": "An MCP server that provides integration between Neo4j graph database and Claude Desktop, enabling graph database operations through natural language interactions.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "daobataotie/mssql-mcp",
        "provider": "daobataotie",
        "server": "mssql-mcp",
        "name": "io.github.daobataotie/mssql-mcp",
        "description": "MSSQL MCP Server provides database interaction and business intelligence capabilities, enabling running SQL queries, analyzing business data, and automatically generating business insight memos.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "DappierAI/dappier-mcp",
        "provider": "DappierAI",
        "server": "dappier-mcp",
        "name": "io.github.DappierAI/dappier-mcp",
        "description": "A Model Context Protocol (MCP) server that connects any LLM or Agentic AI to real-time, rights-cleared, proprietary data from trusted sources. Dappier enables your AI to become an expert in anything by providing access to specialized models, including Real-Time Web Search, News, Sports, Financial Stock Market Data, Crypto Data, and exclusive content from premium publishers.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "datastax/astra-db-mcp",
        "provider": "datastax",
        "server": "astra-db-mcp",
        "name": "io.github.datastax/astra-db-mcp",
        "description": "A Model Context Protocol (MCP) server for interacting with Astra DB. MCP extends the capabilities of Large Language Models (LLMs) by allowing them to interact with external systems as agents.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "deepfates/mcp-replicate",
        "provider": "deepfates",
        "server": "mcp-replicate",
        "name": "io.github.deepfates/mcp-replicate",
        "description": "A Model Context Protocol server implementation for Replicate. Run Replicate models through a simple tool-based interface.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "delorenj/mcp-server-ticketmaster",
        "provider": "delorenj",
        "server": "mcp-server-ticketmaster",
        "name": "io.github.delorenj/mcp-server-ticketmaster",
        "description": "A Model Context Protocol server that provides tools for discovering events, venues, and attractions through the Ticketmaster Discovery API.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "descope-sample-apps/descope-mcp-server-stdio",
        "provider": "descope-sample-apps",
        "server": "descope-mcp-server-stdio",
        "name": "io.github.descope-sample-apps/descope-mcp-server-stdio",
        "description": "The Descope Model Context Protocol (MCP) server provides an interface to interact with Descope's Management APIs, enabling the search and retrieval of project-related information.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "designcomputer/mysql_mcp_server",
        "provider": "designcomputer",
        "server": "mysql_mcp_server",
        "name": "io.github.designcomputer/mysql_mcp_server",
        "description": "A Model Context Protocol (MCP) implementation that enables secure interaction with MySQL databases. This server component facilitates communication between AI applications (hosts/clients) and MySQL databases, making database exploration and analysis safer and more structured through a controlled interface.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "devhub/devhub-cms-mcp",
        "provider": "devhub",
        "server": "devhub-cms-mcp",
        "name": "io.github.devhub/devhub-cms-mcp",
        "description": "Integration with DevHub CMS to manage content",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "dinghuazhou/sample-mcp-server-tos",
        "provider": "dinghuazhou",
        "server": "sample-mcp-server-tos",
        "name": "io.github.dinghuazhou/sample-mcp-server-tos",
        "description": "An MCP server implementation for retrieving data from TOS.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "dmayboroda/minima",
        "provider": "dmayboroda",
        "server": "minima",
        "name": "io.github.dmayboroda/minima",
        "description": "Minima is an open source RAG on-premises containers, with ability to integrate with ChatGPT and MCP. Minima can also be used as a fully local RAG.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "DMontgomery40/deepseek-mcp-server",
        "provider": "DMontgomery40",
        "server": "deepseek-mcp-server",
        "name": "io.github.DMontgomery40/deepseek-mcp-server",
        "description": "A Model Context Protocol (MCP) server for the DeepSeek API, allowing seamless integration of DeepSeek's powerful language models with MCP-compatible applications like Claude Desktop.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "dogukanakkaya/pulumi-mcp-server",
        "provider": "dogukanakkaya",
        "server": "pulumi-mcp-server",
        "name": "io.github.dogukanakkaya/pulumi-mcp-server",
        "description": "MCP server exposing Pulumi stacks and tooling via Model Context Protocol",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "domdomegg/airtable-mcp-server",
        "provider": "domdomegg",
        "server": "airtable-mcp-server",
        "name": "io.github.domdomegg/airtable-mcp-server",
        "description": "A Model Context Protocol server that provides read and write access to Airtable databases. This server enables LLMs to inspect database schemas, then read and write records.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "donghyun-chae/mcp-amadeus",
        "provider": "donghyun-chae",
        "server": "mcp-amadeus",
        "name": "io.github.donghyun-chae/mcp-amadeus",
        "description": "MCP-Amadeus is a community-developed Model Context Protocol (MCP) server that integrates with the Amadeus Flight Offers Search API to provide flight search capabilities through natural language interfaces. Built for use with MCP-compatible clients (e.g., Claude Desktop).",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "dschuler36/reaper-mcp-server",
        "provider": "dschuler36",
        "server": "reaper-mcp-server",
        "name": "io.github.dschuler36/reaper-mcp-server",
        "description": "A simple MCP server that connects a Reaper project to an MCP client like Claude Desktop and enables you to ask questions about the project.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "dvcrn/mcp-server-siri-shortcuts",
        "provider": "dvcrn",
        "server": "mcp-server-siri-shortcuts",
        "name": "io.github.dvcrn/mcp-server-siri-shortcuts",
        "description": "This MCP server provides access to Siri shortcuts functionality via the Model Context Protocol (MCP). It allows listing, opening, and running shortcuts from the macOS Shortcuts app.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "e2b-dev/mcp-server",
        "provider": "e2b-dev",
        "server": "mcp-server",
        "name": "io.github.e2b-dev/mcp-server",
        "description": "The E2B MCP server allows you to add code interpreting capabilities to your Claude Desktop app via the E2B Sandbox.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "EduBase/MCP",
        "provider": "EduBase",
        "server": "MCP",
        "name": "io.github.EduBase/MCP",
        "description": "Implementation of the Model Context Protocol (MCP) server for the EduBase platform. It allows MCP clients and LLMs to interact with EduBase account and perform tasks.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "elastic/mcp-server-elasticsearch",
        "provider": "elastic",
        "server": "mcp-server-elasticsearch",
        "name": "io.github.elastic/mcp-server-elasticsearch",
        "description": "This server connects agents to your Elasticsearch data using the Model Context Protocol. It allows you to interact with your Elasticsearch indices through natural language conversations.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "elie222/inbox-zero",
        "provider": "elie222",
        "server": "inbox-zero",
        "name": "io.github.elie222/inbox-zero",
        "description": "AI email assistant MCP server providing email management tools such as reply tracking and follow-up reminders.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "EnesCinr/twitter-mcp",
        "provider": "EnesCinr",
        "server": "twitter-mcp",
        "name": "io.github.EnesCinr/twitter-mcp",
        "description": "This MCP server allows Clients to interact with Twitter, enabling posting tweets and searching Twitter.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ergut/mcp-bigquery-server",
        "provider": "ergut",
        "server": "mcp-bigquery-server",
        "name": "io.github.ergut/mcp-bigquery-server",
        "description": "This is a server that lets your LLMs (like Claude) talk directly to your BigQuery data! Think of it as a friendly translator that sits between your AI assistant and your database, making sure they can chat securely and efficiently.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "esignaturescom/mcp-server-esignatures",
        "provider": "esignaturescom",
        "server": "mcp-server-esignatures",
        "name": "io.github.esignaturescom/mcp-server-esignatures",
        "description": "MCP server for eSignatures (https://esignatures.com)",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "evalstate/mcp-hfspace",
        "provider": "evalstate",
        "server": "mcp-hfspace",
        "name": "io.github.evalstate/mcp-hfspace",
        "description": "Connect to Hugging Face Spaces with minimal setup needed - simply add your spaces and go! Provides Image Generation capabilities to Claude Desktop.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "exa-labs/exa-mcp-server",
        "provider": "exa-labs",
        "server": "exa-mcp-server",
        "name": "io.github.exa-labs/exa-mcp-server",
        "description": "The Exa MCP server enables AI assistants to perform real-time web searches using Exa's powerful search API, providing structured search results including titles, URLs, and content snippets, caching recent searches as resources, handling rate limiting and errors gracefully, and supporting real-time web crawling for fresh content.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "executeautomation/mcp-playwright",
        "provider": "executeautomation",
        "server": "mcp-playwright",
        "name": "io.github.executeautomation/mcp-playwright",
        "description": "A Model Context Protocol server that provides browser automation capabilities using Playwright. This server enables LLMs to interact with web pages, take screenshots, generate test code, web scraps the page and execute JavaScript in a real browser environment.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "fatwang2/search1api-mcp",
        "provider": "fatwang2",
        "server": "search1api-mcp",
        "name": "io.github.fatwang2/search1api-mcp",
        "description": "A Model Context Protocol (MCP) server that provides search and crawl functionality using Search1API.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "felores/airtable-mcp",
        "provider": "felores",
        "server": "airtable-mcp",
        "name": "io.github.felores/airtable-mcp",
        "description": "A Model Context Protocol server that provides tools for interacting with Airtable's API. This server enables programmatic management of Airtable bases, tables, fields, and records through Claude Desktop or other MCP clients.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "felores/placid-mcp-server",
        "provider": "felores",
        "server": "placid-mcp-server",
        "name": "io.github.felores/placid-mcp-server",
        "description": "An MCP server implementation for integrating with Placid.app's API. This server provides tools for listing templates and generating images and videos through the Model Context Protocol.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ferrislucas/iterm-mcp",
        "provider": "ferrislucas",
        "server": "iterm-mcp",
        "name": "io.github.ferrislucas/iterm-mcp",
        "description": "A Model Context Protocol server that provides access to your iTerm session.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "Fewsats/fewsats-mcp",
        "provider": "Fewsats",
        "server": "fewsats-mcp",
        "name": "io.github.Fewsats/fewsats-mcp",
        "description": "This MCP server integrates with Fewsats and allows AI Agents to purchase anything in a secure way.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "Fibery-inc/fibery-mcp-server",
        "provider": "Fibery-inc",
        "server": "fibery-mcp-server",
        "name": "io.github.Fibery-inc/fibery-mcp-server",
        "description": "This MCP (Model Context Protocol) server provides integration between Fibery and any LLM provider supporting the MCP protocol (e.g., Claude for Desktop), allowing you to interact with your Fibery workspace using natural language.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "financial-datasets/mcp-server",
        "provider": "financial-datasets",
        "server": "mcp-server",
        "name": "io.github.financial-datasets/mcp-server",
        "description": "This is a Model Context Protocol (MCP) server that provides access to stock market data from Financial Datasets. It allows Claude and other AI assistants to retrieve income statements, balance sheets, cash flow statements, stock prices, and market news directly through the MCP interface.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "fireproof-storage/mcp-database-server",
        "provider": "fireproof-storage",
        "server": "mcp-database-server",
        "name": "io.github.fireproof-storage/mcp-database-server",
        "description": "Simple JSON document server with basic CRUD operations using Fireproof database in a Model Context Protocol server.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "Flux159/mcp-server-kubernetes",
        "provider": "Flux159",
        "server": "mcp-server-kubernetes",
        "name": "io.github.Flux159/mcp-server-kubernetes",
        "description": "MCP Server that can connect to a Kubernetes cluster and manage it.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "furey/mongodb-lens",
        "provider": "furey",
        "server": "mongodb-lens",
        "name": "io.github.furey/mongodb-lens",
        "description": "MongoDB MCP server for natural language database interaction",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "gannonh/firebase-mcp",
        "provider": "gannonh",
        "server": "firebase-mcp",
        "name": "io.github.gannonh/firebase-mcp",
        "description": "Firebase MCP enables AI assistants to work directly with Firebase services, including Firestore, Storage, and Authentication, through a standardized Model Context Protocol interface.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "GeLi2001/datadog-mcp-server",
        "provider": "GeLi2001",
        "server": "datadog-mcp-server",
        "name": "io.github.GeLi2001/datadog-mcp-server",
        "description": "A Model Context Protocol (MCP) server for interacting with the Datadog API.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "GeLi2001/shopify-mcp",
        "provider": "GeLi2001",
        "server": "shopify-mcp",
        "name": "io.github.GeLi2001/shopify-mcp",
        "description": "MCP Server for Shopify API, enabling interaction with store data through GraphQL API",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "GeLi2001/tft-mcp-server",
        "provider": "GeLi2001",
        "server": "tft-mcp-server",
        "name": "io.github.GeLi2001/tft-mcp-server",
        "description": "Model Context Protocol (MCP) server for Team Fight Tactics (TFT) that provides access to TFT game data through various tools.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "geropl/linear-mcp-go",
        "provider": "geropl",
        "server": "linear-mcp-go",
        "name": "io.github.geropl/linear-mcp-go",
        "description": "A Model Context Protocol (MCP) server for Linear, written in Go. This server provides tools for interacting with the Linear API through the MCP protocol.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "githejie/mcp-server-calculator",
        "provider": "githejie",
        "server": "mcp-server-calculator",
        "name": "io.github.githejie/mcp-server-calculator",
        "description": "A Model Context Protocol server for calculating. This server enables LLMs to use calculator for precise numerical calculations.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "GLips/Figma-Context-MCP",
        "provider": "GLips",
        "server": "Figma-Context-MCP",
        "name": "io.github.GLips/Figma-Context-MCP",
        "description": "Give your coding agent access to your Figma data. Implement designs in any framework in one-shot. This MCP server is specifically designed for use with Cursor. It simplifies and translates Figma API responses to provide only the most relevant layout and styling information to the model, improving AI accuracy and relevance.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "goat-sdk/goat",
        "provider": "goat-sdk",
        "server": "goat",
        "name": "io.github.goat-sdk/goat",
        "description": "GOAT MCP Server providing on-chain tools for EVM wallets including ETH transfers and ERC20 tokens like USDC.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "GongRzhe/Gmail-MCP-Server",
        "provider": "GongRzhe",
        "server": "Gmail-MCP-Server",
        "name": "io.github.GongRzhe/Gmail-MCP-Server",
        "description": "A Model Context Protocol (MCP) server for Gmail integration in Claude Desktop with auto authentication support. This server enables AI assistants to manage Gmail through natural language interactions.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "GongRzhe/JSON-MCP-Server",
        "provider": "GongRzhe",
        "server": "JSON-MCP-Server",
        "name": "io.github.GongRzhe/JSON-MCP-Server",
        "description": "A JSON Model Context Protocol (MCP) server implementation for querying and manipulating JSON data. This server enables LLMs to interact with JSON data through a set of standardized tools.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "GongRzhe/Langflow-DOC-QA-SERVER",
        "provider": "GongRzhe",
        "server": "Langflow-DOC-QA-SERVER",
        "name": "io.github.GongRzhe/Langflow-DOC-QA-SERVER",
        "description": "A Model Context Protocol server for document Q&A powered by Langflow",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "GongRzhe/Quickchart-MCP-Server",
        "provider": "GongRzhe",
        "server": "Quickchart-MCP-Server",
        "name": "io.github.GongRzhe/Quickchart-MCP-Server",
        "description": "A Model Context Protocol server for generating charts using QuickChart.io",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "GongRzhe/REDIS-MCP-Server",
        "provider": "GongRzhe",
        "server": "REDIS-MCP-Server",
        "name": "io.github.GongRzhe/REDIS-MCP-Server",
        "description": "A Redis Model Context Protocol (MCP) server implementation for interacting with Redis databases. This server enables LLMs to interact with Redis key-value stores through a set of standardized tools.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "GongRzhe/terminal-controller-mcp",
        "provider": "GongRzhe",
        "server": "terminal-controller-mcp",
        "name": "io.github.GongRzhe/terminal-controller-mcp",
        "description": "A Model Context Protocol (MCP) server that enables secure terminal command execution, directory navigation, and file system operations through a standardized interface.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "GongRzhe/TRAVEL-PLANNER-MCP-Server",
        "provider": "GongRzhe",
        "server": "TRAVEL-PLANNER-MCP-Server",
        "name": "io.github.GongRzhe/TRAVEL-PLANNER-MCP-Server",
        "description": "A Travel Planner Model Context Protocol (MCP) server implementation for interacting with Google Maps and travel planning services. This server enables LLMs to perform travel-related tasks such as location search, place details lookup, and travel time calculations.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "google/maps",
        "provider": "google",
        "server": "maps",
        "name": "Google Maps",
        "description": "Google Maps API integration for geocoding, directions, and more.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "gotohuman/gotohuman-mcp-server",
        "provider": "gotohuman",
        "server": "gotohuman-mcp-server",
        "name": "io.github.gotohuman/gotohuman-mcp-server",
        "description": "gotoHuman makes it easy to add human approvals to AI agents and agentic workflows. A fully-managed async human-in-the-loop workflow with a customizable approval UI. Enjoy built-in auth, webhooks, notifications, team features, and an evolving training dataset.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "grafana/mcp-grafana",
        "provider": "grafana",
        "server": "mcp-grafana",
        "name": "io.github.grafana/mcp-grafana",
        "description": "A Model Context Protocol (MCP) server for Grafana. This provides access to your Grafana instance and the surrounding ecosystem.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "graphlit/graphlit-mcp-server",
        "provider": "graphlit",
        "server": "graphlit-mcp-server",
        "name": "io.github.graphlit/graphlit-mcp-server",
        "description": "The Model Context Protocol (MCP) Server enables integration between MCP clients and the Graphlit service. It acts as a searchable, and RAG-ready knowledge base across developer and product management tools, ingesting data from various sources and providing tools for retrieval, RAG, extraction, publishing, ingestion, data connectors, web operations, notifications, and management operations.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "GreptimeTeam/greptimedb-mcp-server",
        "provider": "GreptimeTeam",
        "server": "greptimedb-mcp-server",
        "name": "io.github.GreptimeTeam/greptimedb-mcp-server",
        "description": "A Model Context Protocol (MCP) server implementation for GreptimeDB. This server provides AI assistants with a secure and structured way to explore and analyze databases. It enables them to list tables, read data, and execute SQL queries through a controlled interface, ensuring responsible database access.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "hannesj/mcp-graphql-schema",
        "provider": "hannesj",
        "server": "mcp-graphql-schema",
        "name": "io.github.hannesj/mcp-graphql-schema",
        "description": "A Model Context Protocol (MCP) server that exposes GraphQL schema information to Large Language Models (LLMs) like Claude. This server allows an LLM to explore and understand GraphQL schemas through a set of specialized tools.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "hannesj/mcp-openapi-schema",
        "provider": "hannesj",
        "server": "mcp-openapi-schema",
        "name": "io.github.hannesj/mcp-openapi-schema",
        "description": "A Model Context Protocol (MCP) server that exposes OpenAPI schema information to Large Language Models (LLMs) like Claude. This server allows an LLM to explore and understand OpenAPI specifications through a set of specialized tools.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "haris-musa/excel-mcp-server",
        "provider": "haris-musa",
        "server": "excel-mcp-server",
        "name": "io.github.haris-musa/excel-mcp-server",
        "description": "A Model Context Protocol (MCP) server that lets you manipulate Excel files without needing Microsoft Excel installed. Create, read, and modify Excel workbooks with your AI agent.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "heroku/heroku-mcp-server",
        "provider": "heroku",
        "server": "heroku-mcp-server",
        "name": "io.github.heroku/heroku-mcp-server",
        "description": "The Heroku Platform MCP Server is a specialized Model Context Protocol (MCP) implementation designed to facilitate seamless interaction between large language models (LLMs) and the Heroku Platform. This server provides a robust set of tools and capabilities that enable LLMs to read, manage, and operate Heroku Platform resources.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "heurist-network/heurist-mesh-mcp-server",
        "provider": "heurist-network",
        "server": "heurist-mesh-mcp-server",
        "name": "io.github.heurist-network/heurist-mesh-mcp-server",
        "description": "A Model Context Protocol (MCP) server that connects to Heurist Mesh APIs, providing Claude with access to various blockchain and web3 tools.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "horizondatawave/hdw-mcp-server",
        "provider": "horizondatawave",
        "server": "hdw-mcp-server",
        "name": "io.github.horizondatawave/hdw-mcp-server",
        "description": "A Model Context Protocol (MCP) server that provides comprehensive access to LinkedIn data and functionalities using the HorizonDataWave API, enabling not only data retrieval but also robust management of user accounts.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "hungryrobot1/MCP-PIF",
        "provider": "hungryrobot1",
        "server": "MCP-PIF",
        "name": "io.github.hungryrobot1/MCP-PIF",
        "description": "This project implements the Model Context Protocol (MCP) as a practical embodiment of the Personal Intelligence Framework (PIF). Through structured tools and progressive interaction patterns, it creates spaces for meaningful development of understanding between humans and AI.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "hyperbrowserai/mcp",
        "provider": "hyperbrowserai",
        "server": "mcp",
        "name": "io.github.hyperbrowserai/mcp",
        "description": "Hyperbrowser's Model Context Protocol (MCP) Server providing tools to scrape, extract structured data, and crawl webpages, with access to general purpose browser agents.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "idoru/influxdb-mcp-server",
        "provider": "idoru",
        "server": "influxdb-mcp-server",
        "name": "io.github.idoru/influxdb-mcp-server",
        "description": "A Model Context Protocol (MCP) server that exposes access to an InfluxDB instance using the InfluxDB OSS API v2.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "iflytek/ifly-workflow-mcp-server",
        "provider": "iflytek",
        "server": "ifly-workflow-mcp-server",
        "name": "io.github.iflytek/ifly-workflow-mcp-server",
        "description": "The fastest way to build workflows with an AI agent platform! This is a simple implementation of an MCP server using iFlytek. It enables calling iFlytek workflows through MCP tools. Supports 14 types of workflow nodes, advanced orchestration modes, multi-model support, and streaming output via hook mechanism.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ihor-sokoliuk/mcp-searxng",
        "provider": "ihor-sokoliuk",
        "server": "mcp-searxng",
        "name": "io.github.ihor-sokoliuk/mcp-searxng",
        "description": "An MCP server implementation that integrates the SearXNG API, providing web search capabilities.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "InditexTech/mcp-server-simulator-ios-idb",
        "provider": "InditexTech",
        "server": "mcp-server-simulator-ios-idb",
        "name": "io.github.InditexTech/mcp-server-simulator-ios-idb",
        "description": "A Model Context Protocol (MCP) server that enables LLMs to interact with iOS simulators through natural language commands.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "InditexTech/mcp-teams-server",
        "provider": "InditexTech",
        "server": "mcp-teams-server",
        "name": "io.github.InditexTech/mcp-teams-server",
        "description": "An MCP (Model Context Protocol) server implementation for Microsoft Teams integration, providing capabilities to read messages, create messages, reply to messages, mention members.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "inkeep/mcp-server-python",
        "provider": "inkeep",
        "server": "mcp-server-python",
        "name": "io.github.inkeep/mcp-server-python",
        "description": "Inkeep MCP Server powered by your docs and product content.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "integration-app/mcp-server",
        "provider": "integration-app",
        "server": "mcp-server",
        "name": "io.github.integration-app/mcp-server",
        "description": "Working with HubSpot.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "integromat/make-mcp-server",
        "provider": "integromat",
        "server": "make-mcp-server",
        "name": "io.github.integromat/make-mcp-server",
        "description": "A Model Context Protocol server that enables Make scenarios to be utilized as tools by AI assistants. This integration allows AI systems to trigger and interact with your Make automation workflows.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "isaacwasserman/mcp-snowflake-server",
        "provider": "isaacwasserman",
        "server": "mcp-snowflake-server",
        "name": "io.github.isaacwasserman/mcp-snowflake-server",
        "description": "A Model Context Protocol (MCP) server implementation that provides database interaction with Snowflake. This server enables running SQL queries via tools and exposes data insights and schema context as resources.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "isaacwasserman/mcp-vegalite-server",
        "provider": "isaacwasserman",
        "server": "mcp-vegalite-server",
        "name": "io.github.isaacwasserman/mcp-vegalite-server",
        "description": "A Model Context Protocol (MCP) server implementation that provides the LLM an interface for visualizing data using Vega-Lite syntax.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "isdaniel/mcp_weather_server",
        "provider": "isdaniel",
        "server": "mcp_weather_server",
        "name": "io.github.isdaniel/mcp_weather_server",
        "description": "A Model Context Protocol (MCP) server that provides weather information using the Open-Meteo API.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "its-dart/dart-mcp-server",
        "provider": "its-dart",
        "server": "dart-mcp-server",
        "name": "io.github.its-dart/dart-mcp-server",
        "description": "The official AI Model Context Protocol (MCP) server for Dart, providing task and document management via prompts, resources, and tools.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ivo-toby/contentful-mcp",
        "provider": "ivo-toby",
        "server": "contentful-mcp",
        "name": "io.github.ivo-toby/contentful-mcp",
        "description": "An MCP server implementation that integrates with Contentful's Content Management API, providing comprehensive content management capabilities.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "janwilmake/openapi-mcp-server",
        "provider": "janwilmake",
        "server": "openapi-mcp-server",
        "name": "io.github.janwilmake/openapi-mcp-server",
        "description": "A Model Context Protocol (MCP) server for Claude/Cursor that enables searching and exploring OpenAPI specifications through oapis.org.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "jerhadf/linear-mcp-server",
        "provider": "jerhadf",
        "server": "linear-mcp-server",
        "name": "io.github.jerhadf/linear-mcp-server",
        "description": "A Model Context Protocol server for the Linear API providing integration with Linear's issue tracking system through MCP, allowing LLMs to interact with Linear issues.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "JetBrains/mcp-jetbrains",
        "provider": "JetBrains",
        "server": "mcp-jetbrains",
        "name": "io.github.JetBrains/mcp-jetbrains",
        "description": "You can interact with an JetBrains IntelliJ IDE and its features through this MCP (Model Context Protocol) server. The server provides access to various IDE tools and functionalities. All requests should be formatted as JSON objects according to the Model Context Protocol specification.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "JexinSam/mssql_mcp_server",
        "provider": "JexinSam",
        "server": "mssql_mcp_server",
        "name": "io.github.JexinSam/mssql_mcp_server",
        "description": "MSSQL MCP Server is a Model Context Protocol (MCP) server that enables secure and structured interaction with Microsoft SQL Server (MSSQL) databases. It allows AI assistants to list available tables, read table contents, and execute SQL queries with controlled access, ensuring safer database exploration, strict permission enforcement, and logging of database interactions.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "jifrozen0110/mcp-riot",
        "provider": "jifrozen0110",
        "server": "mcp-riot",
        "name": "io.github.jifrozen0110/mcp-riot",
        "description": "MCP-Riot is a community-developed Model Context Protocol (MCP) server that integrates with the Riot Games API to provide League of Legends data to AI assistants via natural language queries.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "jjsantos01/qgis_mcp",
        "provider": "jjsantos01",
        "server": "qgis_mcp",
        "name": "io.github.jjsantos01/qgis_mcp",
        "description": "QGISMCP connects QGIS to Claude AI through the Model Context Protocol (MCP), allowing Claude to directly interact with and control QGIS. This integration enables prompt assisted project creation, layer loading, code execution and more.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "john-zhang-dev/xero-mcp",
        "provider": "john-zhang-dev",
        "server": "xero-mcp",
        "name": "io.github.john-zhang-dev/xero-mcp",
        "description": "This MCP server allows Clients to interact with Xero Accounting Software.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "JordiNeil/mcp-databricks-server",
        "provider": "JordiNeil",
        "server": "mcp-databricks-server",
        "name": "io.github.JordiNeil/mcp-databricks-server",
        "description": "A Model Context Protocol (MCP) server that connects to Databricks API, allowing LLMs to run SQL queries, list jobs, and get job status.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "kagisearch/kagimcp",
        "provider": "kagisearch",
        "server": "kagimcp",
        "name": "io.github.kagisearch/kagimcp",
        "description": "An MCP server implementation providing tools for web search and summarization using the Kagi Search and Summarizer APIs.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "kapilduraphe/okta-mcp-server",
        "provider": "kapilduraphe",
        "server": "okta-mcp-server",
        "name": "io.github.kapilduraphe/okta-mcp-server",
        "description": "This MCP server enables Claude to interact with Okta's user management system, providing user and group management capabilities.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "kapilduraphe/webflow-mcp-server",
        "provider": "kapilduraphe",
        "server": "webflow-mcp-server",
        "name": "io.github.kapilduraphe/webflow-mcp-server",
        "description": "This MCP server enables Claude to interact with Webflow's APIs.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "keboola/keboola-mcp-server",
        "provider": "keboola",
        "server": "keboola-mcp-server",
        "name": "io.github.keboola/keboola-mcp-server",
        "description": "A Model Context Protocol (MCP) server for interacting with Keboola Connection. This server provides tools for listing and accessing data from Keboola Storage API.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "kenjihikmatullah/productboard-mcp",
        "provider": "kenjihikmatullah",
        "server": "productboard-mcp",
        "name": "io.github.kenjihikmatullah/productboard-mcp",
        "description": "Integrate the Productboard API into agentic workflows via MCP",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "kenliao94/mcp-server-rabbitmq",
        "provider": "kenliao94",
        "server": "mcp-server-rabbitmq",
        "name": "io.github.kenliao94/mcp-server-rabbitmq",
        "description": "A Model Context Protocol server implementation for RabbitMQ. Enabling MCP client to interact with queues and topics hosted in a RabbitMQ instance.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "kiliczsh/mcp-mongo-server",
        "provider": "kiliczsh",
        "server": "mcp-mongo-server",
        "name": "io.github.kiliczsh/mcp-mongo-server",
        "description": "A Model Context Protocol server that enables LLMs to interact with MongoDB databases. This server provides capabilities for inspecting collection schemas and executing MongoDB operations through a standardized interface.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "kiwamizamurai/mcp-kibela-server",
        "provider": "kiwamizamurai",
        "server": "mcp-kibela-server",
        "name": "io.github.kiwamizamurai/mcp-kibela-server",
        "description": "MCP server implementation for Kibela API integration, enabling LLMs to interact with Kibela content.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "Klavis-AI/klavis",
        "provider": "Klavis-AI",
        "server": "klavis",
        "name": "io.github.Klavis-AI/klavis",
        "description": "MCP server providing web crawling, scraping, search, extraction, and related tools via Model Context Protocol.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ko1ynnky/github-actions-mcp-server",
        "provider": "ko1ynnky",
        "server": "github-actions-mcp-server",
        "name": "io.github.ko1ynnky/github-actions-mcp-server",
        "description": "MCP Server for the GitHub Actions API, enabling AI assistants to manage and operate GitHub Actions workflows.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "Kong/mcp-konnect",
        "provider": "Kong",
        "server": "mcp-konnect",
        "name": "io.github.Kong/mcp-konnect",
        "description": "Tools for managing and analyzing Kong Konnect API Gateway configurations and traffic",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "kpsunil97/devrev-mcp-server",
        "provider": "kpsunil97",
        "server": "devrev-mcp-server",
        "name": "io.github.kpsunil97/devrev-mcp-server",
        "description": "A Model Context Protocol server for DevRev. It is used to search and retrieve information using the DevRev APIs.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "kukapay/crypto-feargreed-mcp",
        "provider": "kukapay",
        "server": "crypto-feargreed-mcp",
        "name": "io.github.kukapay/crypto-feargreed-mcp",
        "description": "A mcp server that provides real-time and historical Crypto Fear & Greed Index data, powered by the Alternative.me.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "kukapay/cryptopanic-mcp-server",
        "provider": "kukapay",
        "server": "cryptopanic-mcp-server",
        "name": "io.github.kukapay/cryptopanic-mcp-server",
        "description": "Provide the latest cryptocurrency news to AI agents, powered by CryptoPanic.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "kukapay/dune-analytics-mcp",
        "provider": "kukapay",
        "server": "dune-analytics-mcp",
        "name": "io.github.kukapay/dune-analytics-mcp",
        "description": "Dune Analytics tools",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "kukapay/whale-tracker-mcp",
        "provider": "kukapay",
        "server": "whale-tracker-mcp",
        "name": "io.github.kukapay/whale-tracker-mcp",
        "description": "A Model Context Protocol (MCP) server for tracking cryptocurrency whale transactions using the Whale Alert API",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "KyrieTangSheng/mcp-server-nationalparks",
        "provider": "KyrieTangSheng",
        "server": "mcp-server-nationalparks",
        "name": "io.github.KyrieTangSheng/mcp-server-nationalparks",
        "description": "MCP Server for the National Park Service (NPS) API, providing real-time information about U.S. National Parks, including park details, alerts, and activities.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "Laksh-star/mcp-server-tmdb",
        "provider": "Laksh-star",
        "server": "mcp-server-tmdb",
        "name": "io.github.Laksh-star/mcp-server-tmdb",
        "description": "This MCP server integrates with The Movie Database (TMDB) API to provide movie information, search capabilities, and recommendations.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "lamaalrajih/kicad-mcp",
        "provider": "lamaalrajih",
        "server": "kicad-mcp",
        "name": "io.github.lamaalrajih/kicad-mcp",
        "description": "A Model Context Protocol (MCP) server for KiCad providing resources, tools, and prompts to interact with KiCad projects, schematics, BOMs, DRC checks, netlists, and circuit pattern recognition.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "langfuse/mcp-server-langfuse",
        "provider": "langfuse",
        "server": "mcp-server-langfuse",
        "name": "io.github.langfuse/mcp-server-langfuse",
        "description": "Model Context Protocol (MCP) Server for Langfuse Prompt Management. This server allows access and management of Langfuse prompts through the MCP protocol, implementing the MCP Prompts specification for prompt discovery and retrieval.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "leehanchung/bing-search-mcp",
        "provider": "leehanchung",
        "server": "bing-search-mcp",
        "name": "io.github.leehanchung/bing-search-mcp",
        "description": "A Model Context Protocol (MCP) server for Microsoft Bing Search API integration, allowing AI assistants to perform web, news, and image searches.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "lenwood/cfbd-mcp-server",
        "provider": "lenwood",
        "server": "cfbd-mcp-server",
        "name": "io.github.lenwood/cfbd-mcp-server",
        "description": "An MCP server implementation providing access to college football statistics sourced from the College Football Data API within Claude Desktop. Enables AI assistants and applications to query comprehensive college football statistics and data including game results, team records, player statistics, play-by-play data, rankings, and win probability metrics using natural language.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "leonardsellem/n8n-mcp-server",
        "provider": "leonardsellem",
        "server": "n8n-mcp-server",
        "name": "io.github.leonardsellem/n8n-mcp-server",
        "description": "A Model Context Protocol (MCP) server that allows AI assistants to interact with n8n workflows through natural language. This MCP server provides tools and resources for AI assistants to manage n8n workflows and executions, including listing, creating, updating, deleting, activating, deactivating workflows, executing workflows, monitoring status, and accessing workflow information and execution statistics.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "lingodotdev/lingo.dev",
        "provider": "lingodotdev",
        "server": "lingo.dev",
        "name": "io.github.lingodotdev/lingo",
        "description": "Lingo.dev MCP Server providing AI-powered localization tools via Model Context Protocol.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "lishenxydlgzs/aws-athena-mcp",
        "provider": "lishenxydlgzs",
        "server": "aws-athena-mcp",
        "name": "io.github.lishenxydlgzs/aws-athena-mcp",
        "description": "A Model Context Protocol (MCP) server for running AWS Athena queries. This server enables AI assistants to execute SQL queries against your AWS Athena databases and retrieve results.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "liuyoshio/mcp-compass",
        "provider": "liuyoshio",
        "server": "mcp-compass",
        "name": "io.github.liuyoshio/mcp-compass",
        "description": "MCP Compass is a discovery & recommendation service that helps you explore Model Context Protocol servers. It acts as a smart guide that helps AI assistants find and understand available MCP services out there based on natural language queries, making it easier to discover and utilize the right tools for specific tasks.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "lloydzhou/bitable-mcp",
        "provider": "lloydzhou",
        "server": "bitable-mcp",
        "name": "io.github.lloydzhou/bitable-mcp",
        "description": "This MCP server provides access to Lark Bitable through the Model Context Protocol. It allows users to interact with Bitable tables using predefined tools.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "longmans/coin_api_mcp",
        "provider": "longmans",
        "server": "coin_api_mcp",
        "name": "io.github.longmans/coin_api_mcp",
        "description": "A Model Context Protocol server that provides access to CoinMarketCap's cryptocurrency data. This server enables AI-powered applications to retrieve cryptocurrency listings, quotes, and detailed information about various coins.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "longyi1207/glean-mcp-server",
        "provider": "longyi1207",
        "server": "glean-mcp-server",
        "name": "io.github.longyi1207/glean-mcp-server",
        "description": "An MCP server implementation that integrates the Glean API, providing the Search and Chat functions.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "magnetai/mcp-free-usdc-transfer",
        "provider": "magnetai",
        "server": "mcp-free-usdc-transfer",
        "name": "io.github.magnetai/mcp-free-usdc-transfer",
        "description": "An MCP server implementation enabling free USDC transfers on Base with Coinbase CDP MPC Wallet integration.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "mailgun/mailgun-mcp-server",
        "provider": "mailgun",
        "server": "mailgun-mcp-server",
        "name": "io.github.mailgun/mailgun-mcp-server",
        "description": "A Model Context Protocol (MCP) server implementation for Mailgun, enabling MCP-compatible AI clients like Claude Desktop to interact with the service.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "mamertofabian/elevenlabs-mcp-server",
        "provider": "mamertofabian",
        "server": "elevenlabs-mcp-server",
        "name": "io.github.mamertofabian/elevenlabs-mcp-server",
        "description": "A Model Context Protocol (MCP) server that integrates with ElevenLabs text-to-speech API, featuring both a server component and a sample web-based MCP Client (SvelteKit) for managing voice generation tasks.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "mamertofabian/mcp-everything-search",
        "provider": "mamertofabian",
        "server": "mcp-everything-search",
        "name": "io.github.mamertofabian/mcp-everything-search",
        "description": "An MCP server that provides fast file searching capabilities across Windows, macOS, and Linux. On Windows, it uses the Everything SDK. On macOS, it uses the built-in mdfind command. On Linux, it uses the locate/plocate command.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "manusa/kubernetes-mcp-server",
        "provider": "manusa",
        "server": "kubernetes-mcp-server",
        "name": "io.github.manusa/kubernetes-mcp-server",
        "description": "A powerful and flexible Kubernetes Model Context Protocol (MCP) server implementation with support for Kubernetes and OpenShift.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "mark3labs/mcp-filesystem-server",
        "provider": "mark3labs",
        "server": "mcp-filesystem-server",
        "name": "io.github.mark3labs/mcp-filesystem-server",
        "description": "Go server implementing Model Context Protocol (MCP) for filesystem operations.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "maton-ai/agent-toolkit",
        "provider": "maton-ai",
        "server": "agent-toolkit",
        "name": "io.github.maton-ai/agent-toolkit",
        "description": "The Maton Agent Toolkit enables popular agent frameworks including Model Context Protocol (MCP) to integrate with Maton APIs through function calling. The library is not exhaustive of the entire Maton API. It includes support for Typescript.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "mcpdotdirect/evm-mcp-server",
        "provider": "mcpdotdirect",
        "server": "evm-mcp-server",
        "name": "io.github.mcpdotdirect/evm-mcp-server",
        "description": "A comprehensive Model Context Protocol (MCP) server that provides blockchain services across multiple EVM-compatible networks. This server enables AI agents to interact with Ethereum, Optimism, Arbitrum, Base, Polygon, and many other EVM chains with a unified interface.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "mcpdotdirect/template-mcp-server",
        "provider": "mcpdotdirect",
        "server": "template-mcp-server",
        "name": "io.github.mcpdotdirect/template-mcp-server",
        "description": "A CLI tool to quickly get started building your very own MCP (Model Context Protocol) server using FastMCP",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "meilisearch/meilisearch-mcp",
        "provider": "meilisearch",
        "server": "meilisearch-mcp",
        "name": "io.github.meilisearch/meilisearch-mcp",
        "description": "A Model Context Protocol (MCP) server for interacting with Meilisearch through LLM interfaces like Claude.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "mektigboy/server-hyperliquid",
        "provider": "mektigboy",
        "server": "server-hyperliquid",
        "name": "io.github.mektigboy/server-hyperliquid",
        "description": "An MCP server implementation that integrates the Hyperliquid SDK.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "mem0ai/mem0-mcp",
        "provider": "mem0ai",
        "server": "mem0-mcp",
        "name": "io.github.mem0ai/mem0-mcp",
        "description": "This demonstrates a structured approach for using an MCP server with mem0 to manage coding preferences efficiently. The server provides tools for storing, retrieving, and searching coding preferences and exposes an SSE endpoint for MCP clients.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "mendableai/firecrawl-mcp-server",
        "provider": "mendableai",
        "server": "firecrawl-mcp-server",
        "name": "io.github.mendableai/firecrawl-mcp-server",
        "description": "A Model Context Protocol (MCP) server implementation that integrates with Firecrawl for web scraping capabilities.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "metoro-io/metoro-mcp-server",
        "provider": "metoro-io",
        "server": "metoro-mcp-server",
        "name": "io.github.metoro-io/metoro-mcp-server",
        "description": "The Metoro MCP (Model Context Protocol) Server allows interaction with Kubernetes clusters via the Claude Desktop App by exposing Metoro's APIs to an LLM.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "mfukushim/map-traveler-mcp",
        "provider": "mfukushim",
        "server": "map-traveler-mcp",
        "name": "io.github.mfukushim/map-traveler-mcp",
        "description": "This is an MCP server that creates an environment for an avatar to virtually travel on Google Maps. From an MCP client such as Claude Desktop, you can give instructions to the avatar and report on the progress of its journey with photos.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "MFYDev/ghost-mcp",
        "provider": "MFYDev",
        "server": "ghost-mcp",
        "name": "io.github.MFYDev/ghost-mcp",
        "description": "A Model Context Protocol (MCP) server for interacting with Ghost CMS through LLM interfaces like Claude. This server provides secure and comprehensive access to your Ghost blog, leveraging JWT authentication and a rich set of MCP tools for managing posts, users, members, tiers, offers, and newsletters.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "MindscapeHQ/mcp-server-raygun",
        "provider": "MindscapeHQ",
        "server": "mcp-server-raygun",
        "name": "io.github.MindscapeHQ/mcp-server-raygun",
        "description": "MCP Server for Raygun's API V3 endpoints for interacting with your Crash Reporting and Real User Monitoring applications. This server provides comprehensive access to Raygun's API features through the Model Context Protocol.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "mobile-next/mobile-mcp",
        "provider": "mobile-next",
        "server": "mobile-mcp",
        "name": "io.github.mobile-next/mobile-mcp",
        "description": "This is a Model Context Protocol (MCP) server that enables scalable mobile automation, development through a platform-agnostic interface, eliminating the need for distinct iOS or Android knowledge. You can run it on emulators, simulators, and physical devices (iOS and Android). This server allows Agents and LLMs to interact with native iOS/Android applications and devices through structured accessibility snapshots or coordinate-based taps based on screenshots.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "momentohq/mcp-momento",
        "provider": "momentohq",
        "server": "mcp-momento",
        "name": "io.github.momentohq/mcp-momento",
        "description": "A simple Model Context Protocol (MCP) server implementation for Momento Cache.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "motherduckdb/mcp-server-motherduck",
        "provider": "motherduckdb",
        "server": "mcp-server-motherduck",
        "name": "io.github.motherduckdb/mcp-server-motherduck",
        "description": "An MCP server implementation that interacts with DuckDB and MotherDuck databases, providing SQL analytics capabilities to AI Assistants and IDEs.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "needle-ai/needle-mcp",
        "provider": "needle-ai",
        "server": "needle-mcp",
        "name": "io.github.needle-ai/needle-mcp",
        "description": "MCP (Model Context Protocol) server to manage documents and perform searches using Needle through Claude’s Desktop Application.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "neo4j-contrib/mcp-neo4j",
        "provider": "neo4j-contrib",
        "server": "mcp-neo4j",
        "name": "io.github.neo4j-contrib/mcp-neo4j",
        "description": "Model Context Protocol (MCP) servers for managing context between large language models (LLMs) and Neo4j external systems, including natural language to Cypher queries, knowledge graph memory, and Neo4j Aura cloud service management.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "neondatabase-labs/mcp-server-neon",
        "provider": "neondatabase-labs",
        "server": "mcp-server-neon",
        "name": "io.github.neondatabase-labs/mcp-server-neon",
        "description": "Neon MCP Server is an open-source tool that lets you interact with your Neon Postgres databases in natural language. It acts as a bridge between natural language requests and the Neon API, built upon the Model Context Protocol (MCP), enabling management of projects, branches, queries, and migrations via conversational commands.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "nkapila6/mcp-local-rag",
        "provider": "nkapila6",
        "server": "mcp-local-rag",
        "name": "io.github.nkapila6/mcp-local-rag",
        "description": "\"primitive\" RAG-like web search model context protocol (MCP) server that runs locally. ✨ no APIs ✨",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "nspady/google-calendar-mcp",
        "provider": "nspady",
        "server": "google-calendar-mcp",
        "name": "io.github.nspady/google-calendar-mcp",
        "description": "This is a Model Context Protocol (MCP) server that provides integration with Google Calendar. It allows LLMs to read, create, update and search for calendar events through a standardized interface.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "oatpp/oatpp-mcp",
        "provider": "oatpp",
        "server": "oatpp-mcp",
        "name": "io.github.oatpp/oatpp-mcp",
        "description": "Anthropic’s Model Context Protocol implementation for Oat++",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "oceanbase/mcp-oceanbase",
        "provider": "oceanbase",
        "server": "mcp-oceanbase",
        "name": "io.github.oceanbase/mcp-oceanbase",
        "description": "A Model Context Protocol (MCP) server that enables secure interaction with OceanBase databases.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "OctagonAI/octagon-mcp-server",
        "provider": "OctagonAI",
        "server": "octagon-mcp-server",
        "name": "io.github.OctagonAI/octagon-mcp-server",
        "description": "The Octagon MCP server provides specialized AI-powered financial research and analysis by integrating with the Octagon Market Intelligence API, enabling users to easily analyze and extract detailed insights from public filings, earnings call transcripts, financial metrics, stock market data, and extensive private market transactions within Claude Desktop and other popular MCP clients.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ognis1205/mcp-server-unitycatalog",
        "provider": "ognis1205",
        "server": "mcp-server-unitycatalog",
        "name": "io.github.ognis1205/mcp-server-unitycatalog",
        "description": "A Model Context Protocol server for Unity Catalog providing Unity Catalog Functions as MCP tools.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "Omar-V2/mcp-ical",
        "provider": "Omar-V2",
        "server": "mcp-ical",
        "name": "io.github.Omar-V2/mcp-ical",
        "description": "Transform how you interact with your macOS calendar using natural language via the Model Context Protocol (MCP). Provides natural language calendar management including event creation, updates, schedule queries, and calendar management.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "Omedia/mcp-server-drupal",
        "provider": "Omedia",
        "server": "mcp-server-drupal",
        "name": "io.github.Omedia/mcp-server-drupal",
        "description": "A typescript based companion Model Context Protocol (MCP) server for the Drupal MCP module that works with the STDIO transport.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "open-strategy-partners/osp_marketing_tools",
        "provider": "open-strategy-partners",
        "server": "osp_marketing_tools",
        "name": "io.github.open-strategy-partners/osp_marketing_tools",
        "description": "A comprehensive suite of tools for technical marketing content creation, optimization, and product positioning based on Open Strategy Partners' proven methodologies. This software is based on the Model Context Protocol (MCP) and is usable by any LLM client that supports MCP.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "openbnb-org/mcp-server-airbnb",
        "provider": "openbnb-org",
        "server": "mcp-server-airbnb",
        "name": "io.github.openbnb-org/mcp-server-airbnb",
        "description": "MCP Server for searching Airbnb and get listing details.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "oschina/mcp-gitee",
        "provider": "oschina",
        "server": "mcp-gitee",
        "name": "io.github.oschina/mcp-gitee",
        "description": "Gitee MCP Server is a Model Context Protocol (MCP) server implementation for Gitee. It provides a set of tools for interacting with Gitee's API, allowing AI assistants to manage repositories, issues, pull requests, and more.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "osomai/servicenow-mcp",
        "provider": "osomai",
        "server": "servicenow-mcp",
        "name": "io.github.osomai/servicenow-mcp",
        "description": "A Model Completion Protocol (MCP) server implementation for ServiceNow, allowing Claude to interact with ServiceNow instances.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "oxylabs/oxylabs-mcp",
        "provider": "oxylabs",
        "server": "oxylabs-mcp",
        "name": "io.github.oxylabs/oxylabs-mcp",
        "description": "The Oxylabs MCP server provides a bridge between AI models and the web. It enables them to scrape any URL, render JavaScript-heavy pages, extract and format content for AI use, bypass anti-scraping measures, and access geo-restricted web data from 195+ countries. This implementation leverages the Model Context Protocol (MCP) to create a secure, standardized way for AI assistants to interact with web content.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "pab1it0/adx-mcp-server",
        "provider": "pab1it0",
        "server": "adx-mcp-server",
        "name": "io.github.pab1it0/adx-mcp-server",
        "description": "A Model Context Protocol (MCP) server for Azure Data Explorer/Eventhouse in Microsoft Fabric. Provides access to Azure Data Explorer/Eventhouse clusters and databases through standardized MCP interfaces, allowing AI assistants to execute KQL queries and explore data.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "pab1it0/chess-mcp",
        "provider": "pab1it0",
        "server": "chess-mcp",
        "name": "io.github.pab1it0/chess-mcp",
        "description": "A Model Context Protocol (MCP) server for Chess.com's Published Data API providing access to player data, game records, and other public information through standardized MCP interfaces.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "pab1it0/prometheus-mcp-server",
        "provider": "pab1it0",
        "server": "prometheus-mcp-server",
        "name": "io.github.pab1it0/prometheus-mcp-server",
        "description": "A Model Context Protocol (MCP) server for Prometheus. Provides access to Prometheus metrics and queries through standardized MCP interfaces, allowing AI assistants to execute PromQL queries and analyze metrics data.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "PaddleHQ/paddle-mcp-server",
        "provider": "PaddleHQ",
        "server": "paddle-mcp-server",
        "name": "io.github.PaddleHQ/paddle-mcp-server",
        "description": "This is a Model Context Protocol (MCP) server that provides tools for interacting with the Paddle API.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "pathintegral-institute/mcpm.sh",
        "provider": "pathintegral-institute",
        "server": "mcpm.sh",
        "name": "io.github.pathintegral-institute/mcpm",
        "description": "A router that aggregates multiple MCP servers (SSE/STDIO) and exposes them as a single SSE server.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "peakmojo/mcp-hubspot",
        "provider": "peakmojo",
        "server": "mcp-hubspot",
        "name": "io.github.peakmojo/mcp-hubspot",
        "description": "A Model Context Protocol (MCP) server that enables AI assistants to interact with HubSpot CRM data. This server bridges AI models with your HubSpot account, providing direct access to contacts, companies, and engagement data. Built-in vector storage and caching mechanisms help overcome HubSpot API limitations while improving response times.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "pfldy2850/py-mcp-naver",
        "provider": "pfldy2850",
        "server": "py-mcp-naver",
        "name": "io.github.pfldy2850/py-mcp-naver",
        "description": "A server implementation for Naver OpenAPI using the Model Context Protocol (MCP). This project provides tools to interact with various Naver services, such as searching blogs, news, books, and more.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "prajwalnayak7/mcp-server-redis",
        "provider": "prajwalnayak7",
        "server": "mcp-server-redis",
        "name": "io.github.prajwalnayak7/mcp-server-redis",
        "description": "This implementation provides a solid foundation for Redis integration through MCP. You can extend it further by adding more Redis commands as needed for your specific use case.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "privetin/chroma",
        "provider": "privetin",
        "server": "chroma",
        "name": "io.github.privetin/chroma",
        "description": "A Model Context Protocol (MCP) server implementation that provides vector database capabilities through Chroma. This server enables semantic document search, metadata filtering, and document management with persistent storage.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ProgramComputer/NASA-MCP-server",
        "provider": "ProgramComputer",
        "server": "NASA-MCP-server",
        "name": "io.github.ProgramComputer/NASA-MCP-server",
        "description": "Model Context Protocol server for NASA APIs",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "punkpeye/fastmcp",
        "provider": "punkpeye",
        "server": "fastmcp",
        "name": "io.github.punkpeye/fastmcp",
        "description": "A TypeScript framework for building MCP servers capable of handling client sessions.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "pydantic/logfire-mcp",
        "provider": "pydantic",
        "server": "logfire-mcp",
        "name": "io.github.pydantic/logfire-mcp",
        "description": "This repository contains a Model Context Protocol (MCP) server with tools that can access the OpenTelemetry traces and metrics you've sent to Logfire. This MCP server enables LLMs to retrieve your application's telemetry data, analyze distributed traces, and make use of the results of arbitrary SQL queries executed using the Logfire APIs.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "pyroprompts/any-chat-completions-mcp",
        "provider": "pyroprompts",
        "server": "any-chat-completions-mcp",
        "name": "io.github.pyroprompts/any-chat-completions-mcp",
        "description": "Integrate Claude with Any OpenAI SDK Compatible Chat Completion API - OpenAI, Perplexity, Groq, xAI, PyroPrompts and more. This implements the Model Context Protocol Server.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "qdrant/mcp-server-qdrant",
        "provider": "qdrant",
        "server": "mcp-server-qdrant",
        "name": "io.github.qdrant/mcp-server-qdrant",
        "description": "An official Model Context Protocol server for keeping and retrieving memories in the Qdrant vector search engine. It acts as a semantic memory layer on top of the Qdrant database.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "quarkiverse/quarkus-mcp-server",
        "provider": "quarkiverse",
        "server": "quarkus-mcp-server",
        "name": "io.github.quarkiverse/quarkus-mcp-server",
        "description": "This extension provides declarative and programmatic APIs that enable developers to implement the MCP server features easily.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "quarkiverse/quarkus-mcp-servers",
        "provider": "quarkiverse",
        "server": "quarkus-mcp-servers",
        "name": "io.github.quarkiverse/quarkus-mcp-servers",
        "description": "Model Context Protocol servers implemented in Java using the Quarkus MCP server framework, enabling extension of MCP enabled LLM AI applications.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "quazaai/UnityMCPIntegration",
        "provider": "quazaai",
        "server": "UnityMCPIntegration",
        "name": "io.github.quazaai/UnityMCPIntegration",
        "description": "MCP server providing integration between Model Context Protocol and Unity Editor, enabling AI assistants to interact with Unity projects in real-time, including scene hierarchy, project settings, code execution, logs, and play mode control.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "r-huijts/ns-mcp-server",
        "provider": "r-huijts",
        "server": "ns-mcp-server",
        "name": "io.github.r-huijts/ns-mcp-server",
        "description": "This MCP server connects Claude to real-time NS (Nederlandse Spoorwegen) travel information, making it your perfect companion for navigating the Netherlands by train.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "r-huijts/rijksmuseum-mcp",
        "provider": "r-huijts",
        "server": "rijksmuseum-mcp",
        "name": "io.github.r-huijts/rijksmuseum-mcp",
        "description": "A Model Context Protocol (MCP) server that provides access to the Rijksmuseum's collection through natural language interactions. This server enables AI models to explore, analyze, and interact with artworks and collections from the Rijksmuseum.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "rajvirtual/MCP-Servers",
        "provider": "rajvirtual",
        "server": "MCP-Servers",
        "name": "io.github.rajvirtual/MCP-Servers",
        "description": "MCP server providing tools to read and create Microsoft OneNote content via Microsoft Graph API.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ramp-public/ramp_mcp",
        "provider": "ramp-public",
        "server": "ramp_mcp",
        "name": "io.github.ramp-public/ramp_mcp",
        "description": "A Model Context Protocol server for retrieving and analyzing data or running tasks for Ramp using Developer API. Implements an ETL pipeline and ephemeral sqlite database in memory for analysis by an LLM.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "RamXX/mcp-tavily",
        "provider": "RamXX",
        "server": "mcp-tavily",
        "name": "io.github.RamXX/mcp-tavily",
        "description": "A Model Context Protocol server that provides AI-powered web search capabilities using Tavily's search API. This server enables LLMs to perform sophisticated web searches, get direct answers to questions, and search recent news articles with AI-extracted relevant content.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "raoulbia-ai/mcp-server-for-intercom",
        "provider": "raoulbia-ai",
        "server": "mcp-server-for-intercom",
        "name": "io.github.raoulbia-ai/mcp-server-for-intercom",
        "description": "An MCP-compliant server that enables AI assistants to access and analyze customer support data from Intercom.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ravenwits/mcp-server-arangodb",
        "provider": "ravenwits",
        "server": "mcp-server-arangodb",
        "name": "io.github.ravenwits/mcp-server-arangodb",
        "description": "A Model Context Protocol server for ArangoDB providing database interaction capabilities through ArangoDB with core database operations and MCP tool integration.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "reading-plus-ai/mcp-server-data-exploration",
        "provider": "reading-plus-ai",
        "server": "mcp-server-data-exploration",
        "name": "io.github.reading-plus-ai/mcp-server-data-exploration",
        "description": "MCP Server is a versatile tool designed for interactive data exploration. Your personal Data Scientist assistant, turning complex datasets into clear, actionable insights.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "redis/mcp-redis",
        "provider": "redis",
        "server": "mcp-redis",
        "name": "io.github.redis/mcp-redis",
        "description": "The Redis MCP Server is a natural language interface designed for agentic applications to efficiently manage and search data in Redis. It integrates seamlessly with MCP (Model Content Protocol) clients, enabling AI-driven workflows to interact with structured and unstructured data in Redis.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "redis/mcp-redis-cloud",
        "provider": "redis",
        "server": "mcp-redis-cloud",
        "name": "io.github.redis/mcp-redis-cloud",
        "description": "Model Context Protocol (MCP) server for managing Redis Cloud resources via natural language commands.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "rember/rember-mcp",
        "provider": "rember",
        "server": "rember-mcp",
        "name": "io.github.rember/rember-mcp",
        "description": "Allow Claude to create flashcards for you with the official Model Context Protocol (MCP) for Rember. Rember helps you study and remember anything you care about by scheduling spaced repetition reviews.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "rishijatia/fantasy-pl-mcp",
        "provider": "rishijatia",
        "server": "fantasy-pl-mcp",
        "name": "io.github.rishijatia/fantasy-pl-mcp",
        "description": "A Model Context Protocol (MCP) server that provides access to Fantasy Premier League (FPL) data and tools. This server allows you to interact with FPL data in Claude for Desktop and other MCP-compatible clients.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "rishikavikondala/mcp-server-aws",
        "provider": "rishikavikondala",
        "server": "mcp-server-aws",
        "name": "io.github.rishikavikondala/mcp-server-aws",
        "description": "A Model Context Protocol server implementation for AWS operations that currently supports S3 and DynamoDB services. All operations are automatically logged and can be accessed through the audit://aws-operations resource endpoint.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "riza-io/riza-mcp",
        "provider": "riza-io",
        "server": "riza-mcp",
        "name": "io.github.riza-io/riza-mcp",
        "description": "The Riza MCP server wraps the Riza API and presents endpoints as individual tools for LLM-generated code execution and management.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ruixingshi/deepseek-thinker-mcp",
        "provider": "ruixingshi",
        "server": "deepseek-thinker-mcp",
        "name": "io.github.ruixingshi/deepseek-thinker-mcp",
        "description": "A MCP (Model Context Protocol) provider Deepseek reasoning content to MCP-enabled AI Clients, like Claude Desktop. Supports access to Deepseek's thought processes from the Deepseek API service or from a local Ollama server.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "run-llama/mcp-server-llamacloud",
        "provider": "run-llama",
        "server": "mcp-server-llamacloud",
        "name": "io.github.run-llama/mcp-server-llamacloud",
        "description": "A MCP server connecting to multiple managed indexes on LlamaCloud. Each index is exposed as a separate tool that allows querying specific LlamaCloud indexes.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "sakce/mcp-server-monday",
        "provider": "sakce",
        "server": "mcp-server-monday",
        "name": "io.github.sakce/mcp-server-monday",
        "description": "MCP Server for monday.com, enabling MCP clients to interact with Monday.com boards, items, updates, and documents.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "SaseQ/discord-mcp",
        "provider": "SaseQ",
        "server": "discord-mcp",
        "name": "io.github.SaseQ/discord-mcp",
        "description": "A Model Context Protocol (MCP) server for the Discord API (JDA), allowing seamless integration of Discord Bot with MCP-compatible applications like Claude Desktop.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "scorzeth/anki-mcp-server",
        "provider": "scorzeth",
        "server": "anki-mcp-server",
        "name": "io.github.scorzeth/anki-mcp-server",
        "description": "An MCP server implementation that connects to a locally running Anki, providing card review and creation.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "screenshotone/mcp",
        "provider": "screenshotone",
        "server": "mcp",
        "name": "io.github.screenshotone/mcp",
        "description": "An official implementation of an MCP (Model Context Protocol) server for ScreenshotOne that provides a tool to render a screenshot of a website and returns it as an image.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "semgrep/mcp",
        "provider": "semgrep",
        "server": "mcp",
        "name": "io.github.semgrep/mcp",
        "description": "A Model Context Protocol (MCP) server for using Semgrep to scan code for security vulnerabilities. Secure your vibe coding! Semgrep is a fast, deterministic static analysis tool that semantically understands many languages and comes with over 5,000 rules.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "sendaifun/solana-agent-kit",
        "provider": "sendaifun",
        "server": "solana-agent-kit",
        "name": "io.github.sendaifun/solana-agent-kit",
        "description": "An MCP server exposing Solana Agent Kit actions as MCP tools, enabling onchain interaction via Model Context Protocol.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "sergehuber/inoyu-mcp-unomi-server",
        "provider": "sergehuber",
        "server": "inoyu-mcp-unomi-server",
        "name": "io.github.sergehuber/inoyu-mcp-unomi-server",
        "description": "A Model Context Protocol server enabling Claude to maintain user context through Apache Unomi profile management.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "shanejonas/openrpc-mpc-server",
        "provider": "shanejonas",
        "server": "openrpc-mpc-server",
        "name": "io.github.shanejonas/openrpc-mpc-server",
        "description": "A Model Context Protocol (MCP) server that provides JSON-RPC functionality through OpenRPC.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "shannonlal/mcp-postman",
        "provider": "shannonlal",
        "server": "mcp-postman",
        "name": "io.github.shannonlal/mcp-postman",
        "description": "An MCP (Model Context Protocol) server that enables running Postman collections using Newman. This server allows LLMs to execute API tests and get detailed results through a standardized interface.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ShenghaiWang/xcodebuild",
        "provider": "ShenghaiWang",
        "server": "xcodebuild",
        "name": "io.github.ShenghaiWang/xcodebuild",
        "description": "A Model Context Protocol server that builds iOS workspace/project that enables seamless workflow working with iOS projects in Visual Studio Code using extensions like Cline or Roo Code.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "Simon-Kansara/ableton-live-mcp-server",
        "provider": "Simon-Kansara",
        "server": "ableton-live-mcp-server",
        "name": "io.github.Simon-Kansara/ableton-live-mcp-server",
        "description": "The Ableton Live MCP Server is a server implementing the Model Context Protocol (MCP) to facilitate communication between LLMs and Ableton Live using OSC (Open Sound Control). It provides an MCP-compatible API for controlling Ableton Live from MCP clients.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "SimonB97/win-cli-mcp-server",
        "provider": "SimonB97",
        "server": "win-cli-mcp-server",
        "name": "io.github.SimonB97/win-cli-mcp-server",
        "description": "MCP server for secure command-line interactions on Windows systems, enabling controlled access to PowerShell, CMD, Git Bash shells, and remote systems via SSH. It allows MCP clients to perform operations on your system, similar to Open Interpreter.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "singlestore-labs/mcp-server-singlestore",
        "provider": "singlestore-labs",
        "server": "mcp-server-singlestore",
        "name": "io.github.singlestore-labs/mcp-server-singlestore",
        "description": "MCP server for SingleStore enabling integration with LLM clients like Claude Desktop and Cursor to perform operations using natural language.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "sirmews/mcp-pinecone",
        "provider": "sirmews",
        "server": "mcp-pinecone",
        "name": "io.github.sirmews/mcp-pinecone",
        "description": "Pinecone Model Context Protocol Server for Claude Desktop. Implements reading and writing to a Pinecone index with tools for semantic search, document processing, and stats.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "skydeckai/mcp-server-rememberizer",
        "provider": "skydeckai",
        "server": "mcp-server-rememberizer",
        "name": "io.github.skydeckai/mcp-server-rememberizer",
        "description": "A Model Context Protocol server for interacting with Rememberizer's document and knowledge management API. This server enables Large Language Models to search, retrieve, and manage documents and integrations through Rememberizer.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "smithery-ai/mcp-obsidian",
        "provider": "smithery-ai",
        "server": "mcp-obsidian",
        "name": "io.github.smithery-ai/mcp-obsidian",
        "description": "Connector to allow Claude Desktop (or any MCP client) to read and search any directory containing Markdown notes (such as an Obsidian vault).",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "smn2gnt/MCP-Salesforce",
        "provider": "smn2gnt",
        "server": "MCP-Salesforce",
        "name": "io.github.smn2gnt/MCP-Salesforce",
        "description": "A Model Context Protocol (MCP) server implementation for Salesforce integration, allowing LLMs to interact with Salesforce data through SOQL queries and SOSL searches.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "sooperset/mcp-atlassian",
        "provider": "sooperset",
        "server": "mcp-atlassian",
        "name": "io.github.sooperset/mcp-atlassian",
        "description": "Model Context Protocol (MCP) server for Atlassian products (Confluence and Jira). This integration supports both Confluence & Jira Cloud and Server/Data Center deployments.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "sparfenyuk/mcp-proxy",
        "provider": "sparfenyuk",
        "server": "mcp-proxy",
        "name": "io.github.sparfenyuk/mcp-proxy",
        "description": "The mcp-proxy is a tool that lets you switch between server transports. It supports proxying MCP server requests between stdio and SSE transports, enabling clients like Claude Desktop to communicate with MCP servers over SSE or stdio.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "Spathodea-Network/opencti-mcp",
        "provider": "Spathodea-Network",
        "server": "opencti-mcp",
        "name": "io.github.Spathodea-Network/opencti-mcp",
        "description": "OpenCTI MCP Server is a Model Context Protocol (MCP) server that provides seamless integration with OpenCTI (Open Cyber Threat Intelligence) platform. It enables querying and retrieving threat intelligence data through a standardized interface.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "StarRocks/mcp-server-starrocks",
        "provider": "StarRocks",
        "server": "mcp-server-starrocks",
        "name": "io.github.StarRocks/mcp-server-starrocks",
        "description": "The StarRocks MCP Server acts as a bridge between AI assistants and StarRocks databases. It allows for direct SQL execution, database exploration, data visualization via charts, and retrieving detailed schema/data overviews without requiring complex client-side setup.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "starwind-ui/starwind-ui-mcp",
        "provider": "starwind-ui",
        "server": "starwind-ui-mcp",
        "name": "io.github.starwind-ui/starwind-ui-mcp",
        "description": "A TypeScript implementation of a Model Context Protocol (MCP) server for Starwind UI, providing tools to help developers work with Starwind UI components.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "stefanoamorelli/nasdaq-data-link-mcp",
        "provider": "stefanoamorelli",
        "server": "nasdaq-data-link-mcp",
        "name": "io.github.stefanoamorelli/nasdaq-data-link-mcp",
        "description": "A community developed and maintained Model Context Protocol (MCP) server that provides access to Nasdaq Data Link financial and economic datasets through natural language interfaces and large language models.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "stefanoamorelli/sec-edgar-mcp",
        "provider": "stefanoamorelli",
        "server": "sec-edgar-mcp",
        "name": "io.github.stefanoamorelli/sec-edgar-mcp",
        "description": "SEC EDGAR MCP is an open-source MCP server that connects AI models to the rich dataset of SEC EDGAR filings, enabling AI assistants to query official SEC financial data in real-time.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "StevenStavrakis/obsidian-mcp",
        "provider": "StevenStavrakis",
        "server": "obsidian-mcp",
        "name": "io.github.StevenStavrakis/obsidian-mcp",
        "description": "An MCP (Model Context Protocol) server that enables AI assistants to interact with Obsidian vaults, providing tools for reading, creating, editing and managing notes and tags.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "stippi/code-assistant",
        "provider": "stippi",
        "server": "code-assistant",
        "name": "io.github.stippi/code-assistant",
        "description": "A CLI tool built in Rust for assisting with code-related tasks, capable of running as a Model Context Protocol server providing tools and resources to LLMs running in an MCP client.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "stripe/agent-toolkit",
        "provider": "stripe",
        "server": "agent-toolkit",
        "name": "io.github.stripe/agent-toolkit",
        "description": "Enables integration with Stripe APIs through function calling, supporting multiple agent frameworks including Model Context Protocol (MCP).",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "strowk/foxy-contexts",
        "provider": "strowk",
        "server": "foxy-contexts",
        "name": "io.github.strowk/foxy-contexts",
        "description": "Foxy contexts is a Golang library for building context servers supporting Model Context Protocol. This library only supports server side of the protocol. Using it you can build context servers using declarative approach, by defining tools, resources and prompts and then registering them with your app.Builder.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "strowk/mcp-k8s-go",
        "provider": "strowk",
        "server": "mcp-k8s-go",
        "name": "io.github.strowk/mcp-k8s-go",
        "description": "Golang-based MCP server connecting to Kubernetes. Provides listing and retrieval of Kubernetes contexts, namespaces, resources, nodes, pods, events, pod logs, and running commands in pods.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "suekou/mcp-notion-server",
        "provider": "suekou",
        "server": "mcp-notion-server",
        "name": "io.github.suekou/mcp-notion-server",
        "description": "MCP Server for the Notion API, enabling LLM to interact with Notion workspaces. Additionally, it employs Markdown conversion to reduce context size when communicating with LLMs, optimizing token usage and making interactions more efficient.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "suhail-ak-s/mcp-typesense-server",
        "provider": "suhail-ak-s",
        "server": "mcp-typesense-server",
        "name": "io.github.suhail-ak-s/mcp-typesense-server",
        "description": "A Model Context Protocol (MCP) server implementation that provides AI models with access to Typesense search capabilities. This server enables LLMs to discover, search, and analyze data stored in Typesense collections.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "sunsetcoder/flightradar24-mcp-server",
        "provider": "sunsetcoder",
        "server": "flightradar24-mcp-server",
        "name": "io.github.sunsetcoder/flightradar24-mcp-server",
        "description": "A Claude Desktop MCP server that helps you track flights in real-time using Flightradar24 data. Perfect for aviation enthusiasts, travel planners, or anyone curious about flights overhead!",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "syucream/holaspirit-mcp-server",
        "provider": "syucream",
        "server": "holaspirit-mcp-server",
        "name": "io.github.syucream/holaspirit-mcp-server",
        "description": "A MCP(Model Context Protocol) server that accesses to Holaspirit API. This server provides MCP-compatible access to Holaspirit's API, allowing AI assistants to interact with your Holaspirit data through a standardized interface.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "syucream/lightdash-mcp-server",
        "provider": "syucream",
        "server": "lightdash-mcp-server",
        "name": "io.github.syucream/lightdash-mcp-server",
        "description": "A MCP(Model Context Protocol) server that accesses to Lightdash. This server provides MCP-compatible access to Lightdash's API, allowing AI assistants to interact with your Lightdash data through a standardized interface.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "tadata-org/fastapi_mcp",
        "provider": "tadata-org",
        "server": "fastapi_mcp",
        "name": "io.github.tadata-org/fastapi_mcp",
        "description": "Expose your FastAPI endpoints as Model Context Protocol (MCP) tools, with Auth!",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "tavily-ai/tavily-mcp",
        "provider": "tavily-ai",
        "server": "tavily-mcp",
        "name": "io.github.tavily-ai/tavily-mcp",
        "description": "The Tavily MCP server provides seamless interaction with the tavily-search and tavily-extract tools, enabling real-time web search and intelligent data extraction capabilities via the Model Context Protocol.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "teddyzxcv/ntfy-mcp",
        "provider": "teddyzxcv",
        "server": "ntfy-mcp",
        "name": "io.github.teddyzxcv/ntfy-mcp",
        "description": "The MCP server that keeps you caffeinated and informed by sending ntfy notifications whenever your AI assistant completes a task.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "TencentEdgeOne/edgeone-pages-mcp",
        "provider": "TencentEdgeOne",
        "server": "edgeone-pages-mcp",
        "name": "io.github.TencentEdgeOne/edgeone-pages-mcp",
        "description": "An MCP service for deploying HTML content to EdgeOne Pages and obtaining a publicly accessible URL.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "TermiX-official/bsc-mcp",
        "provider": "TermiX-official",
        "server": "bsc-mcp",
        "name": "io.github.TermiX-official/bsc-mcp",
        "description": "A plug-and-play MCP tool server to send BNB, transfer BEP-20 tokens, deploy tokens, and interact with smart contracts on the Binance Smart Chain (BSC) — built for Claude Desktop, AI agents, and developers.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "tesla0225/mcp-create",
        "provider": "tesla0225",
        "server": "mcp-create",
        "name": "io.github.tesla0225/mcp-create",
        "description": "A dynamic MCP server management service that creates, runs, and manages Model Context Protocol (MCP) servers dynamically. This service itself functions as an MCP server and launches/manages other MCP servers as child processes, enabling a flexible MCP ecosystem.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "tevonsb/homeassistant-mcp",
        "provider": "tevonsb",
        "server": "homeassistant-mcp",
        "name": "io.github.tevonsb/homeassistant-mcp",
        "description": "The server uses the MCP protocol to share access to a local Home Assistant instance with an LLM application. A powerful bridge between your Home Assistant instance and Language Learning Models (LLMs), enabling natural language control and monitoring of your smart home devices through the Model Context Protocol (MCP). This server provides a comprehensive API for managing your entire Home Assistant ecosystem, from device control to system administration.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "thirdweb-dev/ai",
        "provider": "thirdweb-dev",
        "server": "ai",
        "name": "io.github.thirdweb-dev/ai",
        "description": "MCP server providing blockchain tools via the MCP protocol, enabling compatible LLM clients to interact with blockchain data and AI agents.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "tinybirdco/mcp-tinybird",
        "provider": "tinybirdco",
        "server": "mcp-tinybird",
        "name": "io.github.tinybirdco/mcp-tinybird",
        "description": "An MCP server to interact with a Tinybird Workspace from any MCP client. Supports querying Tinybird Data Sources, getting results from Tinybird API Endpoints, and pushing Datafiles. Supports both SSE and STDIO modes.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "tinyfish-io/agentql-mcp",
        "provider": "tinyfish-io",
        "server": "agentql-mcp",
        "name": "io.github.tinyfish-io/agentql-mcp",
        "description": "This is a Model Context Protocol (MCP) server that integrates AgentQL's data extraction capabilities.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "topoteretes/cognee",
        "provider": "topoteretes",
        "server": "cognee",
        "name": "io.github.topoteretes/cognee",
        "description": "Build dynamic Agent memory using scalable, modular ECL (Extract, Cognify, Load) pipelines.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "translated/lara-mcp",
        "provider": "translated",
        "server": "lara-mcp",
        "name": "io.github.translated/lara-mcp",
        "description": "A Model Context Protocol (MCP) Server for Lara Translate API, enabling powerful translation capabilities with support for language detection, context-aware translations and translation memories.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "unibaseio/membase-mcp",
        "provider": "unibaseio",
        "server": "membase-mcp",
        "name": "io.github.unibaseio/membase-mcp",
        "description": "The membase mcp server enables seamless integration with the membase protocol for decentralized storage. It provides functionality to upload and download memory to/from the Unibase DA network, managing conversations and messages for AI agents.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "v-3/discordmcp",
        "provider": "v-3",
        "server": "discordmcp",
        "name": "io.github.v-3/discordmcp",
        "description": "A Model Context Protocol (MCP) server that enables LLMs to interact with Discord channels, allowing them to send and read messages through Discord's API. Using this server, LLMs like Claude can directly interact with Discord channels while maintaining user control and security.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "v-3/google-calendar",
        "provider": "v-3",
        "server": "google-calendar",
        "name": "io.github.v-3/google-calendar",
        "description": "This MCP server allows Claude to interact with your Google Calendar, enabling capabilities like listing events, creating meetings, and finding free time slots.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "v-3/notion-server",
        "provider": "v-3",
        "server": "notion-server",
        "name": "io.github.v-3/notion-server",
        "description": "A Model Context Protocol (MCP) server that provides seamless integration with Notion. This server enables Language Models to interact with your Notion workspace through standardized tools for searching, reading, creating, and updating pages and databases.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "varunneal/spotify-mcp",
        "provider": "varunneal",
        "server": "spotify-mcp",
        "name": "io.github.varunneal/spotify-mcp",
        "description": "MCP project to connect Claude with Spotify. Built on top of spotipy-dev's API. Supports playback control, search, info retrieval, and queue management.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "VectorInstitute/mcp-goodnews",
        "provider": "VectorInstitute",
        "server": "mcp-goodnews",
        "name": "io.github.VectorInstitute/mcp-goodnews",
        "description": "A simple Model Context Protocol (MCP) application that features a server for getting good, positive, and uplifting news. It fetches news articles from NewsAPI and uses a Cohere LLM to rank and return the top news articles based on positive sentiment.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "vectorize-io/vectorize-mcp-server",
        "provider": "vectorize-io",
        "server": "vectorize-mcp-server",
        "name": "io.github.vectorize-io/vectorize-mcp-server",
        "description": "A Model Context Protocol (MCP) server implementation that integrates with Vectorize for advanced Vector retrieval and text extraction.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "Verodat/verodat-mcp-server",
        "provider": "Verodat",
        "server": "verodat-mcp-server",
        "name": "io.github.Verodat/verodat-mcp-server",
        "description": "A Model Context Protocol (MCP) server implementation for Verodat, allowing AI models to interact with Verodat's data management capabilities through well-defined tools.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "VeyraX/veyrax-mcp",
        "provider": "VeyraX",
        "server": "veyrax-mcp",
        "name": "io.github.VeyraX/veyrax-mcp",
        "description": "VeyraX MCP is an MCP server providing a unified connection to access all your tools in any MCP-compatible environment.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "vidhupv/x-mcp",
        "provider": "vidhupv",
        "server": "x-mcp",
        "name": "io.github.vidhupv/x-mcp",
        "description": "An MCP server to create, manage and publish X/Twitter posts directly through Claude chat.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "vishalmysore/choturobo",
        "provider": "vishalmysore",
        "server": "choturobo",
        "name": "io.github.vishalmysore/choturobo",
        "description": "Arduino-based robotics server integrating AI using the MCP (Model Context Protocol) framework from Claude AI by Anthropic. Controls hardware components like LEDs, motors, servos, fans, sensors via MCP tools and prompts.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "vivekVells/mcp-pandoc",
        "provider": "vivekVells",
        "server": "mcp-pandoc",
        "name": "io.github.vivekVells/mcp-pandoc",
        "description": "A Model Context Protocol server for document format conversion using pandoc. This server provides tools to transform content between different document formats while preserving formatting and structure.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "Vortiago/mcp-azure-devops",
        "provider": "Vortiago",
        "server": "mcp-azure-devops",
        "name": "io.github.Vortiago/mcp-azure-devops",
        "description": "A Model Context Protocol (MCP) server enabling AI assistants to interact with Azure DevOps services. This server provides a bridge between natural language interactions and the Azure DevOps REST API, supporting work item management, project management, and team management features.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "voska/hass-mcp",
        "provider": "voska",
        "server": "hass-mcp",
        "name": "io.github.voska/hass-mcp",
        "description": "A Model Context Protocol (MCP) server for Home Assistant integration with Claude and other LLMs. Enables AI assistants to query device states, control entities, get summaries, troubleshoot automations, search entities, and create guided conversations.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "wanaku-ai/wanaku",
        "provider": "wanaku-ai",
        "server": "wanaku",
        "name": "io.github.wanaku-ai/wanaku",
        "description": "The Wanaku MCP Router is a router for AI-enabled applications powered by the Model Context Protocol (MCP). This protocol is an open protocol that standardizes how applications provide context to LLMs.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "whataboutyou-ai/eunomia-mcp-server",
        "provider": "whataboutyou-ai",
        "server": "eunomia-mcp-server",
        "name": "io.github.whataboutyou-ai/eunomia-mcp-server",
        "description": "Eunomia MCP Server is an extension of the Eunomia framework that connects Eunomia instruments with MCP servers. It provides a simple way to orchestrate data governance policies (like PII detection or user access control) and seamlessly integrate them with external server processes in the MCP ecosystem.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "wildfly-extras/wildfly-mcp",
        "provider": "wildfly-extras",
        "server": "wildfly-mcp",
        "name": "io.github.wildfly-extras/wildfly-mcp",
        "description": "A WildFly MCP server to integrate with your AI chatbot in order to interact with WildFly server using natural language.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "wilsonchenghy/ShaderToy-MCP",
        "provider": "wilsonchenghy",
        "server": "ShaderToy-MCP",
        "name": "io.github.wilsonchenghy/ShaderToy-MCP",
        "description": "MCP Server for ShaderToy, connecting LLM like Claude with ShaderToy through Model Context Protocol (MCP), allowing the LLM to query and read the entire web page and generate complex shaders.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "XeroAPI/xero-mcp-server",
        "provider": "XeroAPI",
        "server": "xero-mcp-server",
        "name": "io.github.XeroAPI/xero-mcp-server",
        "description": "This is a Model Context Protocol (MCP) server implementation for Xero. It provides a bridge between the MCP protocol and Xero's API, allowing for standardized access to Xero's accounting and business features.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "XGenerationLab/xiyan_mcp_server",
        "provider": "XGenerationLab",
        "server": "xiyan_mcp_server",
        "name": "io.github.XGenerationLab/xiyan_mcp_server",
        "description": "A Model Context Protocol (MCP) server that enables natural language queries to databases powered by XiYan-SQL, SOTA of text-to-sql on open benchmarks",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "xxxbrian/mcp-rquest",
        "provider": "xxxbrian",
        "server": "mcp-rquest",
        "name": "io.github.xxxbrian/mcp-rquest",
        "description": "A Model Context Protocol (MCP) server that provides advanced HTTP request capabilities for Claude and other LLMs. Built on rquest, this server enables realistic browser emulation with accurate TLS/JA3/JA4 fingerprints, allowing models to interact with websites more naturally and bypass common anti-bot measures. It also supports converting PDF and HTML documents to Markdown for easier processing by LLMs.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "yangkyeongmo/mcp-server-apache-airflow",
        "provider": "yangkyeongmo",
        "server": "mcp-server-apache-airflow",
        "name": "io.github.yangkyeongmo/mcp-server-apache-airflow",
        "description": "A Model Context Protocol (MCP) server implementation for Apache Airflow, enabling seamless integration with MCP clients. This project provides a standardized way to interact with Apache Airflow through the Model Context Protocol.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "yanmxa/multicluster-mcp-server",
        "provider": "yanmxa",
        "server": "multicluster-mcp-server",
        "name": "io.github.yanmxa/multicluster-mcp-server",
        "description": "The Multi-Cluster MCP Server provides a robust gateway for Generative AI (GenAI) systems to interact with multiple Kubernetes clusters through the Model Context Protocol (MCP). It facilitates comprehensive operations on Kubernetes resources, streamlined multi-cluster management, and delivered interactive cluster observability.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "YanxingLiu/dify-mcp-server",
        "provider": "YanxingLiu",
        "server": "dify-mcp-server",
        "name": "io.github.YanxingLiu/dify-mcp-server",
        "description": "A simple implementation of an MCP server for using dify workflows. It achieves the invocation of the Dify workflow by calling the tools of MCP.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "yeonupark/mcp-soccer-data",
        "provider": "yeonupark",
        "server": "mcp-soccer-data",
        "name": "io.github.yeonupark/mcp-soccer-data",
        "description": "An open-source Model Context Protocol (MCP) server that connects to the SoccerDataAPI to deliver up-to-date football match information via natural language interactions.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "yuanoOo/oceanbase_mcp_server",
        "provider": "yuanoOo",
        "server": "oceanbase_mcp_server",
        "name": "io.github.yuanoOo/oceanbase_mcp_server",
        "description": "A Model Context Protocol (MCP) server that enables secure interaction with OceanBase databases. This server allows AI assistants to list tables, read data, and execute SQL queries through a controlled interface, making database exploration and analysis safer and more structured.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "YuChenSSR/mindmap-mcp-server",
        "provider": "YuChenSSR",
        "server": "mindmap-mcp-server",
        "name": "io.github.YuChenSSR/mindmap-mcp-server",
        "description": "A Model Context Protocol (MCP) server for converting Markdown content to interactive mindmaps.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "zcaceres/easy-mcp",
        "provider": "zcaceres",
        "server": "easy-mcp",
        "name": "io.github.zcaceres/easy-mcp",
        "description": "EasyMCP is the simplest way to create Model Context Protocol (MCP) servers in TypeScript. It hides the plumbing, formatting, and other boilerplate definitions behind simple declarations. Easy MCP allows you to define the bare minimum of what you need to get started. Or you can define more complex resources, templates, tools, and prompts.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "zcaceres/fetch-mcp",
        "provider": "zcaceres",
        "server": "fetch-mcp",
        "name": "io.github.zcaceres/fetch-mcp",
        "description": "This MCP server provides functionality to fetch web content in various formats, including HTML, JSON, plain text, and Markdown.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "zcaceres/gtasks-mcp",
        "provider": "zcaceres",
        "server": "gtasks-mcp",
        "name": "io.github.zcaceres/gtasks-mcp",
        "description": "This MCP server integrates with Google Tasks to allow listing, reading, searching, creating, updating, and deleting tasks.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "zcaceres/markdownify-mcp",
        "provider": "zcaceres",
        "server": "markdownify-mcp",
        "name": "io.github.zcaceres/markdownify-mcp",
        "description": "Markdownify is a Model Context Protocol (MCP) server that converts various file types and web content to Markdown format. It provides a set of tools to transform PDFs, images, audio files, web pages, and more into easily readable and shareable Markdown text.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "zenml-io/mcp-zenml",
        "provider": "zenml-io",
        "server": "mcp-zenml",
        "name": "io.github.zenml-io/mcp-zenml",
        "description": "This project implements a Model Context Protocol (MCP) server for interacting with the ZenML API. It provides MCP tools to access core read functionality from the ZenML server, including users, stacks, pipelines, pipeline runs, pipeline steps, services, stack components, flavors, pipeline run templates, schedules, artifacts metadata, service connectors, step code, and step logs. It also allows triggering new pipeline runs if a run template is present.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "zilliztech/mcp-server-milvus",
        "provider": "zilliztech",
        "server": "mcp-server-milvus",
        "name": "io.github.zilliztech/mcp-server-milvus",
        "description": "This MCP server provides access to Milvus vector database functionality, enabling integration between LLM applications and external data sources via the Model Context Protocol.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "ZubeidHendricks/youtube-mcp-server",
        "provider": "ZubeidHendricks",
        "server": "youtube-mcp-server",
        "name": "io.github.ZubeidHendricks/youtube-mcp-server",
        "description": "A Model Context Protocol (MCP) server implementation for YouTube, enabling AI language models to interact with YouTube content through a standardized interface.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    },
    {
        "id": "zzaebok/mcp-wikidata",
        "provider": "zzaebok",
        "server": "mcp-wikidata",
        "name": "io.github.zzaebok/mcp-wikidata",
        "description": "A server implementation for Wikidata API using the Model Context Protocol (MCP). This project provides tools to interact with Wikidata, such as searching identifiers (entity and property), extracting metadata (label and description) and executing sparql query.",
        "repo": null,
        "mcpversion": null,
        "serverversion": null
    }
]