{
  "ancestor": "1",
  "createdat": "2025-05-27T10:28:42.330020844Z",
  "description": "MCP server that provides tools and resources for interacting with n8n API",
  "epoch": 1,
  "id": "309e2634-8163-47c9-951e-1cfec85e701b",
  "isdefault": true,
  "metaurl": "https://mcpxreg.com/registry/mcpproviders/leonardsellem/servers/n8n-mcp-server/meta",
  "modifiedat": "2025-05-27T10:28:42.330020844Z",
  "name": "io.github.leonardsellem/n8n-mcp-server",
  "packages": [
    {
      "environment_variables": [
        {
          "description": "http://your-n8n-instance:5678/api/v1",
          "name": "N8N_API_URL"
        },
        {
          "description": "YOUR_N8N_API_KEY",
          "name": "N8N_API_KEY"
        }
      ],
      "name": "n8n-mcp-server",
      "package_arguments": [
        {
          "default": "/path/to/your/cloned/n8n-mcp-server/build/index.js",
          "description": "Positional argument providing absolute path to the built index.js file",
          "format": "string",
          "is_required": true,
          "type": "positional",
          "value": "/path/to/your/cloned/n8n-mcp-server/build/index.js",
          "value_hint": "/path/to/your/cloned/n8n-mcp-server/build/index.js"
        }
      ],
      "registry_name": "unknown",
      "version": "0.1.0"
    }
  ],
  "prompts": [],
  "repository": {
    "id": "947387660",
    "source": "github",
    "url": "https://github.com/leonardsellem/n8n-mcp-server"
  },
  "resources": [
    {
      "description": "Static resource representing all workflows.",
      "mimetype": "application/json",
      "name": "workflows",
      "uritemplate": "/resources/workflows"
    },
    {
      "description": "Static resource representing execution statistics.",
      "mimetype": "application/json",
      "name": "execution_stats",
      "uritemplate": "/resources/execution-stats"
    },
    {
      "description": "Dynamic resource for a specific workflow identified by ID.",
      "mimetype": "application/json",
      "name": "workflow",
      "uritemplate": "/resources/workflows/{workflowId}"
    },
    {
      "description": "Dynamic resource for a specific execution identified by ID.",
      "mimetype": "application/json",
      "name": "execution",
      "uritemplate": "/resources/executions/{executionId}"
    }
  ],
  "self": "https://mcpxreg.com/registry/mcpproviders/leonardsellem/servers/n8n-mcp-server",
  "serverid": "n8n-mcp-server",
  "tools": [
    {
      "description": "List all workflows available in the n8n instance.",
      "inputschema": {
        "type": "object"
      },
      "name": "list_workflows"
    },
    {
      "description": "Retrieve details of a specific workflow.",
      "inputschema": {
        "type": "object"
      },
      "name": "get_workflow"
    },
    {
      "description": "Create a new workflow in n8n.",
      "inputschema": {
        "type": "object"
      },
      "name": "create_workflow"
    },
    {
      "description": "Update an existing workflow.",
      "inputschema": {
        "type": "object"
      },
      "name": "update_workflow"
    },
    {
      "description": "Delete a workflow from n8n.",
      "inputschema": {
        "type": "object"
      },
      "name": "delete_workflow"
    },
    {
      "description": "Activate a workflow to enable execution.",
      "inputschema": {
        "type": "object"
      },
      "name": "activate_workflow"
    },
    {
      "description": "Deactivate a workflow to disable execution.",
      "inputschema": {
        "type": "object"
      },
      "name": "deactivate_workflow"
    },
    {
      "description": "List executions of workflows.",
      "inputschema": {
        "type": "object"
      },
      "name": "list_executions"
    },
    {
      "description": "Get details of a specific execution.",
      "inputschema": {
        "type": "object"
      },
      "name": "get_execution"
    },
    {
      "description": "Delete an execution record.",
      "inputschema": {
        "type": "object"
      },
      "name": "delete_execution"
    },
    {
      "description": "Execute a workflow via webhook trigger.",
      "inputschema": {
        "type": "object"
      },
      "name": "run_webhook"
    }
  ],
  "version_detail": {
    "is_latest": true,
    "release_date": "2025-05-16T19:10:57Z",
    "version": "0.0.1-seed"
  },
  "versionid": "1",
  "versionscount": 1,
  "versionsurl": "https://mcpxreg.com/registry/mcpproviders/leonardsellem/servers/n8n-mcp-server/versions",
  "xid": "/mcpproviders/leonardsellem/servers/n8n-mcp-server"
}