{
  "id": "edf43b88-36a4-4f07-9d46-cab08bd418aa",
  "name": "io.github.kenliao94/mcp-server-rabbitmq",
  "description": "MCP server for interacting with RabbitMQ",
  "repository": {
    "url": "https://github.com/kenliao94/mcp-server-rabbitmq",
    "source": "github",
    "id": "910977229"
  },
  "version_detail": {
    "version": "0.0.1-seed",
    "release_date": "2025-05-16T19:13:12Z",
    "is_latest": true
  },
  "packages": [
    {
      "registry_name": "pypi",
      "name": "mcp-server-rabbitmq",
      "version": "2.0.0",
      "package_arguments": [
        {
          "description": "Specify directory to run the package from",
          "is_required": true,
          "format": "string",
          "value": "--directory /path/to/repo/mcp-server-rabbitmq",
          "default": "--directory /path/to/repo/mcp-server-rabbitmq",
          "type": "named",
          "name": "--directory /path/to/repo/mcp-server-rabbitmq",
          "value_hint": "/path/to/repo/mcp-server-rabbitmq"
        },
        {
          "description": "Package or script name to execute",
          "is_required": true,
          "format": "string",
          "value": "mcp-server-rabbitmq",
          "default": "mcp-server-rabbitmq",
          "type": "positional",
          "value_hint": "mcp-server-rabbitmq"
        },
        {
          "description": "RabbitMQ host name",
          "is_required": true,
          "format": "string",
          "value": "--rabbitmq-host <hostname ex. test.rabbit.com, localhost>",
          "default": "--rabbitmq-host <hostname ex. test.rabbit.com, localhost>",
          "type": "named",
          "name": "--rabbitmq-host <hostname ex. test.rabbit.com, localhost>",
          "value_hint": "<hostname ex. test.rabbit.com, localhost>"
        },
        {
          "description": "RabbitMQ port number",
          "is_required": true,
          "format": "string",
          "value": "--port <port number ex. 5672>",
          "default": "--port <port number ex. 5672>",
          "type": "named",
          "name": "--port <port number ex. 5672>",
          "value_hint": "<port number ex. 5672>"
        },
        {
          "description": "RabbitMQ username",
          "is_required": true,
          "format": "string",
          "value": "--username <rabbitmq username>",
          "default": "--username <rabbitmq username>",
          "type": "named",
          "name": "--username <rabbitmq username>",
          "value_hint": "<rabbitmq username>"
        },
        {
          "description": "RabbitMQ password",
          "is_required": true,
          "format": "string",
          "value": "--password <rabbitmq password>",
          "default": "--password <rabbitmq password>",
          "type": "named",
          "name": "--password <rabbitmq password>",
          "value_hint": "<rabbitmq password>"
        },
        {
          "description": "Whether to use TLS (amqps protocol)",
          "is_required": true,
          "format": "string",
          "value": "--use-tls <true if uses amqps, false otherwise>",
          "default": "--use-tls <true if uses amqps, false otherwise>",
          "type": "named",
          "name": "--use-tls <true if uses amqps, false otherwise>",
          "value_hint": "<true if uses amqps, false otherwise>"
        }
      ]
    }
  ],
  "tools": [
    {
      "name": "enqueue",
      "description": "Enqueue a message to a RabbitMQ queue.",
      "inputschema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "queue": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "queue"
        ]
      }
    },
    {
      "name": "fanout",
      "description": "Publish a message to a RabbitMQ exchange with fanout.",
      "inputschema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "exchange": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "exchange"
        ]
      }
    },
    {
      "name": "list_queues",
      "description": "List all RabbitMQ queues.",
      "inputschema": {
        "type": "object",
        "properties": {},
        "required": []
      }
    },
    {
      "name": "list_exchanges",
      "description": "List all RabbitMQ exchanges.",
      "inputschema": {
        "type": "object",
        "properties": {},
        "required": []
      }
    },
    {
      "name": "get_queue_info",
      "description": "Get information about a specific RabbitMQ queue.",
      "inputschema": {
        "type": "object",
        "properties": {
          "queue": {
            "type": "string"
          },
          "vhost": {
            "type": "string"
          }
        },
        "required": [
          "queue"
        ]
      }
    },
    {
      "name": "delete_queue",
      "description": "Delete a specific RabbitMQ queue.",
      "inputschema": {
        "type": "object",
        "properties": {
          "queue": {
            "type": "string"
          },
          "vhost": {
            "type": "string"
          }
        },
        "required": [
          "queue"
        ]
      }
    },
    {
      "name": "purge_queue",
      "description": "Purge messages from a specific RabbitMQ queue.",
      "inputschema": {
        "type": "object",
        "properties": {
          "queue": {
            "type": "string"
          },
          "vhost": {
            "type": "string"
          }
        },
        "required": [
          "queue"
        ]
      }
    },
    {
      "name": "delete_exchange",
      "description": "Delete a specific RabbitMQ exchange.",
      "inputschema": {
        "type": "object",
        "properties": {
          "exchange": {
            "type": "string"
          },
          "vhost": {
            "type": "string"
          }
        },
        "required": [
          "exchange"
        ]
      }
    },
    {
      "name": "get_exchange_info",
      "description": "Get information about a specific RabbitMQ exchange.",
      "inputschema": {
        "type": "object",
        "properties": {
          "exchange": {
            "type": "string"
          },
          "vhost": {
            "type": "string"
          }
        },
        "required": [
          "exchange"
        ]
      }
    }
  ],
  "resources": [],
  "prompts": []
}