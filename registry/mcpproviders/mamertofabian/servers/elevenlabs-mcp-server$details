{
  "ancestor": "1",
  "createdat": "2025-05-27T13:01:02.847458899Z",
  "description": "",
  "epoch": 1,
  "id": "1d89482a-a7de-4d3b-a7cb-1b7be49939ec",
  "isdefault": true,
  "metaurl": "https://mcpxreg.com/registry/mcpproviders/mamertofabian/servers/elevenlabs-mcp-server/meta",
  "modifiedat": "2025-05-27T13:01:02.847458899Z",
  "name": "io.github.mamertofabian/elevenlabs-mcp-server",
  "packages": [
    {
      "environment_variables": [
        {
          "description": "your-api-key",
          "name": "ELEVENLABS_API_KEY"
        },
        {
          "description": "your-voice-id",
          "name": "ELEVENLABS_VOICE_ID"
        },
        {
          "description": "eleven_flash_v2",
          "name": "ELEVENLABS_MODEL_ID"
        },
        {
          "description": "0.5",
          "name": "ELEVENLABS_STABILITY"
        },
        {
          "description": "0.75",
          "name": "ELEVENLABS_SIMILARITY_BOOST"
        },
        {
          "description": "0.1",
          "name": "ELEVENLABS_STYLE"
        },
        {
          "description": "output",
          "name": "ELEVENLABS_OUTPUT_DIR"
        }
      ],
      "name": "elevenlabs-mcp-server",
      "package_arguments": [
        {
          "default": "--directory path/to/elevenlabs-mcp-server",
          "description": "Flag to specify a directory for the server",
          "format": "string",
          "is_required": true,
          "name": "--directory path/to/elevenlabs-mcp-server",
          "type": "named",
          "value": "--directory path/to/elevenlabs-mcp-server",
          "value_hint": "path/to/elevenlabs-mcp-server"
        },
        {
          "default": "elevenlabs-mcp-server",
          "description": "Positional argument specifying the target server to run",
          "format": "string",
          "is_required": true,
          "type": "positional",
          "value": "elevenlabs-mcp-server",
          "value_hint": "elevenlabs-mcp-server"
        }
      ],
      "registry_name": "pypi",
      "version": "0.1.1"
    }
  ],
  "prompts": [],
  "repository": {
    "id": "906473152",
    "source": "github",
    "url": "https://github.com/mamertofabian/elevenlabs-mcp-server"
  },
  "resources": [
    {
      "description": "Access voiceover job history. Provide job_id for specific job or omit for all jobs.",
      "mimetype": "application/json",
      "name": "Voiceover Job History",
      "uritemplate": "voiceover://history/{job_id}"
    },
    {
      "description": "Access list of available ElevenLabs voices with metadata",
      "mimetype": "application/json",
      "name": "Available Voices",
      "uritemplate": "voiceover://voices"
    }
  ],
  "self": "https://mcpxreg.com/registry/mcpproviders/mamertofabian/servers/elevenlabs-mcp-server",
  "serverid": "elevenlabs-mcp-server",
  "tools": [
    {
      "description": "Generate audio from plain text using default voice settings",
      "inputschema": {
        "properties": {
          "text": {
            "description": "Plain text to convert to audio",
            "type": "string"
          },
          "voice_id": {
            "description": "Optional voice ID to use for generation",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "type": "object"
      },
      "name": "generate_audio_simple"
    },
    {
      "description": "Generate audio from a structured script with multiple voices and actors. \n                    Accepts either:\n                    1. Plain text string\n                    2. JSON string with format: {\n                        \"script\": [\n                            {\n                                \"text\": \"Text to speak\",\n                                \"voice_id\": \"optional-voice-id\",\n                                \"actor\": \"optional-actor-name\"\n                            },\n                            ...\n                        ]\n                    }",
      "inputschema": {
        "properties": {
          "script": {
            "description": "JSON string containing script array or plain text. For JSON format, provide an object with a 'script' array containing objects with 'text' (required), 'voice_id' (optional), and 'actor' (optional) fields.",
            "type": "string"
          }
        },
        "required": [
          "script"
        ],
        "type": "object"
      },
      "name": "generate_audio_script"
    },
    {
      "description": "Delete a voiceover job and its associated files",
      "inputschema": {
        "properties": {
          "job_id": {
            "description": "ID of the job to delete",
            "type": "string"
          }
        },
        "required": [
          "job_id"
        ],
        "type": "object"
      },
      "name": "delete_job"
    },
    {
      "description": "Get the audio file content for a specific job",
      "inputschema": {
        "properties": {
          "job_id": {
            "description": "ID of the job to get audio file for",
            "type": "string"
          }
        },
        "required": [
          "job_id"
        ],
        "type": "object"
      },
      "name": "get_audio_file"
    },
    {
      "description": "Get a list of all available ElevenLabs voices with metadata",
      "inputschema": {
        "properties": {},
        "required": [],
        "type": "object"
      },
      "name": "list_voices"
    },
    {
      "description": "Get voiceover job history. Optionally specify a job ID for a specific job.",
      "inputschema": {
        "properties": {
          "job_id": {
            "description": "Optional job ID to get details for a specific job",
            "type": "string"
          }
        },
        "required": [],
        "type": "object"
      },
      "name": "get_voiceover_history"
    }
  ],
  "version_detail": {
    "is_latest": true,
    "release_date": "2025-05-16T19:06:20Z",
    "version": "0.0.1-seed"
  },
  "versionid": "1",
  "versionscount": 1,
  "versionsurl": "https://mcpxreg.com/registry/mcpproviders/mamertofabian/servers/elevenlabs-mcp-server/versions",
  "xid": "/mcpproviders/mamertofabian/servers/elevenlabs-mcp-server"
}