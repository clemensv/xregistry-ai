{
  "id": "819f0338-1101-475c-9915-65a8727a8dc5",
  "name": "io.github.unibaseio/membase-mcp",
  "description": "A lightweight, decentralized memory server for AI agents to store and retrieve conversations via the Unibase memory layer.",
  "repository": {
    "url": "https://github.com/unibaseio/membase-mcp",
    "source": "github",
    "id": "957747274"
  },
  "version_detail": {
    "version": "0.0.1-seed",
    "release_date": "2025-05-16T19:10:06Z",
    "is_latest": true
  },
  "packages": [
    {
      "registry_name": "pypi",
      "name": "membase-mcp",
      "version": "0.1.0",
      "package_arguments": [
        {
          "description": "Specifies the directory to use",
          "is_required": true,
          "format": "string",
          "value": "--directory path/to/membase-mcp",
          "default": "--directory path/to/membase-mcp",
          "type": "named",
          "name": "--directory path/to/membase-mcp",
          "value_hint": "path/to/membase-mcp"
        },
        {
          "description": "Path to the membase MCP server script",
          "is_required": true,
          "format": "string",
          "value": "src/membase_mcp/server.py",
          "default": "src/membase_mcp/server.py",
          "type": "positional",
          "value_hint": "src/membase_mcp/server.py"
        }
      ],
      "environment_variables": [
        {
          "description": "your account, 0x...",
          "name": "MEMBASE_ACCOUNT"
        },
        {
          "description": "your conversation id, should be unique",
          "name": "MEMBASE_CONVERSATION_ID"
        },
        {
          "description": "your sub account, any string",
          "name": "MEMBASE_ID"
        }
      ]
    }
  ],
  "tools": [
    {
      "name": "get_conversation_id",
      "description": "Get the current conversation id.",
      "inputschema": {
        "type": "object",
        "properties": {},
        "required": []
      }
    },
    {
      "name": "switch_conversation",
      "description": "Switch to a different conversation.",
      "inputschema": {
        "type": "object",
        "properties": {
          "conversation_id": {
            "type": "string"
          }
        },
        "required": [
          "conversation_id"
        ]
      }
    },
    {
      "name": "save_message",
      "description": "Save a message/memory into the current conversation.",
      "inputschema": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "msg_type": {
            "type": "string",
            "enum": [
              "user",
              "assistant"
            ]
          }
        },
        "required": [
          "content"
        ]
      }
    },
    {
      "name": "get_messages",
      "description": "Get the last n messages from the current conversation.",
      "inputschema": {
        "type": "object",
        "properties": {
          "recent_n": {
            "type": "integer"
          }
        },
        "required": []
      }
    }
  ],
  "resources": [],
  "prompts": []
}