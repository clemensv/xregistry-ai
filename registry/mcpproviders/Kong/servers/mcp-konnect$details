{
  "ancestor": "1",
  "createdat": "2025-05-26T10:35:00.599160039Z",
  "description": "A Model Context Protocol (MCP) server for interacting with Kong Konnect APIs, allowing AI assistants to query and analyze Kong Gateway configurations, traffic, and analytics.",
  "epoch": 1,
  "id": "86a12728-3ab9-4a69-a447-bcb67957a5f7",
  "isdefault": true,
  "metaurl": "https://clemensv.github.io/xregistry-ai//registry/mcpproviders/Kong/servers/mcp-konnect/meta",
  "modifiedat": "2025-05-26T10:35:00.599160039Z",
  "name": "io.github.kong/mcp-konnect",
  "packages": [
    {
      "environment_variables": [
        {
          "description": "kpat_api_key_here",
          "name": "KONNECT_ACCESS_TOKEN"
        },
        {
          "description": "us",
          "name": "KONNECT_REGION"
        }
      ],
      "name": "kong-konnect-mcp",
      "registry_name": "unknown",
      "version": "1.0.0"
    }
  ],
  "prompts": [],
  "repository": {
    "id": "944084760",
    "source": "github",
    "url": "https://github.com/Kong/mcp-konnect"
  },
  "resources": [],
  "self": "https://clemensv.github.io/xregistry-ai//registry/mcpproviders/Kong/servers/mcp-konnect",
  "serverid": "mcp-konnect",
  "tools": [
    {
      "description": "Query and analyze Kong API Gateway requests with customizable filters.",
      "inputschema": {
        "properties": {
          "consumerIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "excludeStatusCodes": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "httpMethods": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "maxResults": {
            "type": "integer"
          },
          "routeIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "serviceIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "statusCodes": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "timeRange": {
            "type": "string"
          }
        },
        "required": [
          "timeRange"
        ],
        "type": "object"
      },
      "name": "query_api_requests"
    },
    {
      "description": "Analyze API requests made by a specific consumer.",
      "inputschema": {
        "properties": {
          "consumerId": {
            "type": "string"
          },
          "failureOnly": {
            "type": "boolean"
          },
          "maxResults": {
            "type": "integer"
          },
          "successOnly": {
            "type": "boolean"
          },
          "timeRange": {
            "type": "string"
          }
        },
        "required": [
          "consumerId",
          "timeRange"
        ],
        "type": "object"
      },
      "name": "get_consumer_requests"
    },
    {
      "description": "List all services associated with a control plane.",
      "inputschema": {
        "properties": {
          "controlPlaneId": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          }
        },
        "required": [
          "controlPlaneId"
        ],
        "type": "object"
      },
      "name": "list_services"
    },
    {
      "description": "List all routes associated with a control plane.",
      "inputschema": {
        "properties": {
          "controlPlaneId": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          }
        },
        "required": [
          "controlPlaneId"
        ],
        "type": "object"
      },
      "name": "list_routes"
    },
    {
      "description": "List all consumers associated with a control plane.",
      "inputschema": {
        "properties": {
          "controlPlaneId": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          }
        },
        "required": [
          "controlPlaneId"
        ],
        "type": "object"
      },
      "name": "list_consumers"
    },
    {
      "description": "List all plugins associated with a control plane.",
      "inputschema": {
        "properties": {
          "controlPlaneId": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          }
        },
        "required": [
          "controlPlaneId"
        ],
        "type": "object"
      },
      "name": "list_plugins"
    },
    {
      "description": "List control planes with filtering and pagination.",
      "inputschema": {
        "properties": {
          "filterCloudGateway": {
            "type": "boolean"
          },
          "filterClusterType": {
            "type": "string"
          },
          "filterName": {
            "type": "string"
          },
          "labels": {
            "type": "object"
          },
          "pageNumber": {
            "type": "integer"
          },
          "pageSize": {
            "type": "integer"
          },
          "sort": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "name": "list_control_planes"
    },
    {
      "description": "Get details of a specific control plane.",
      "inputschema": {
        "properties": {
          "controlPlaneId": {
            "type": "string"
          }
        },
        "required": [
          "controlPlaneId"
        ],
        "type": "object"
      },
      "name": "get_control_plane"
    },
    {
      "description": "List memberships of a control plane group.",
      "inputschema": {
        "properties": {
          "groupId": {
            "type": "string"
          },
          "pageAfter": {
            "type": "string"
          },
          "pageSize": {
            "type": "integer"
          }
        },
        "required": [
          "groupId"
        ],
        "type": "object"
      },
      "name": "list_control_plane_group_memberships"
    },
    {
      "description": "Check membership of a control plane in a group.",
      "inputschema": {
        "properties": {
          "controlPlaneId": {
            "type": "string"
          }
        },
        "required": [
          "controlPlaneId"
        ],
        "type": "object"
      },
      "name": "check_control_plane_group_membership"
    }
  ],
  "version_detail": {
    "is_latest": true,
    "release_date": "2025-05-16T19:08:59Z",
    "version": "0.0.1-seed"
  },
  "versionid": "1",
  "versionscount": 1,
  "versionsurl": "https://clemensv.github.io/xregistry-ai//registry/mcpproviders/Kong/servers/mcp-konnect/versions",
  "xid": "/mcpproviders/Kong/servers/mcp-konnect"
}