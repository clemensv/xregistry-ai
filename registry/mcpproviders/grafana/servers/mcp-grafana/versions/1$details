{
  "ancestor": "1",
  "createdat": "2025-05-26T16:39:39.630307614Z",
  "description": "MCP server for Grafana",
  "epoch": 1,
  "id": "1329d108-67d0-488a-85a1-cc65b58cf5cd",
  "isdefault": true,
  "modifiedat": "2025-05-26T16:39:39.630307614Z",
  "name": "io.github.grafana/mcp-grafana",
  "packages": [
    {
      "environment_variables": [
        {
          "description": "http://localhost:3000",
          "name": "GRAFANA_URL"
        },
        {
          "description": "\u003cyour service account token\u003e",
          "name": "GRAFANA_API_KEY"
        }
      ],
      "name": "grafana/mcp-grafana",
      "package_arguments": [
        {
          "default": "--rm",
          "description": "Remove container after exit",
          "format": "string",
          "is_required": true,
          "name": "--rm",
          "type": "named",
          "value": "--rm"
        },
        {
          "default": "-p 8000:8000",
          "description": "Publish a container's port(s) to the host",
          "format": "string",
          "is_required": true,
          "name": "-p 8000:8000",
          "type": "named",
          "value": "-p 8000:8000",
          "value_hint": "8000:8000"
        },
        {
          "default": "-e GRAFANA_URL",
          "description": "Set environment variable GRAFANA_URL",
          "format": "string",
          "is_required": true,
          "name": "-e GRAFANA_URL",
          "type": "named",
          "value": "-e GRAFANA_URL",
          "value_hint": "GRAFANA_URL"
        },
        {
          "default": "-e GRAFANA_API_KEY",
          "description": "Set environment variable GRAFANA_API_KEY",
          "format": "string",
          "is_required": true,
          "name": "-e GRAFANA_API_KEY",
          "type": "named",
          "value": "-e GRAFANA_API_KEY",
          "value_hint": "GRAFANA_API_KEY"
        },
        {
          "default": "mcp/grafana",
          "description": "Container image to run",
          "format": "string",
          "is_required": true,
          "type": "positional",
          "value": "mcp/grafana",
          "value_hint": "mcp/grafana"
        },
        {
          "default": "-debug",
          "description": "Enable debug mode",
          "format": "string",
          "name": "-debug",
          "type": "named",
          "value": "-debug"
        }
      ],
      "registry_name": "docker",
      "version": ""
    }
  ],
  "prompts": [],
  "repository": {
    "id": "907869862",
    "source": "github",
    "url": "https://github.com/grafana/mcp-grafana"
  },
  "resources": [],
  "self": "https://mcpxreg.com/registry/mcpproviders/grafana/servers/mcp-grafana/versions/1",
  "serverid": "mcp-grafana",
  "tools": [
    {
      "description": "Search for dashboards",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "search_dashboards"
    },
    {
      "description": "Get a dashboard by uid",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "get_dashboard_by_uid"
    },
    {
      "description": "List datasources",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "list_datasources"
    },
    {
      "description": "Get a datasource by uid",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "get_datasource_by_uid"
    },
    {
      "description": "Get a datasource by name",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "get_datasource_by_name"
    },
    {
      "description": "Execute a query against a Prometheus datasource",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "query_prometheus"
    },
    {
      "description": "List metric metadata",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "list_prometheus_metric_metadata"
    },
    {
      "description": "List available metric names",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "list_prometheus_metric_names"
    },
    {
      "description": "List label names matching a selector",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "list_prometheus_label_names"
    },
    {
      "description": "List values for a specific label",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "list_prometheus_label_values"
    },
    {
      "description": "List incidents in Grafana Incident",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "list_incidents"
    },
    {
      "description": "Create an incident in Grafana Incident",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "create_incident"
    },
    {
      "description": "Add an activity item to an incident in Grafana Incident",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "add_activity_to_incident"
    },
    {
      "description": "Resolve an incident in Grafana Incident",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "resolve_incident"
    },
    {
      "description": "Query and retrieve logs using LogQL (either log or metric queries)",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "query_loki_logs"
    },
    {
      "description": "List all available label names in logs",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "list_loki_label_names"
    },
    {
      "description": "List values for a specific label in Loki logs",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "list_loki_label_values"
    },
    {
      "description": "List and fetch alert rule information",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "list_prometheus_alert_rules"
    },
    {
      "description": "Get alert rule statuses (firing/normal/error/etc.)",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "get_alert_rule_statuses"
    },
    {
      "description": "List contact points",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "list_contact_points"
    },
    {
      "description": "List and manage schedules",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "list_oncall_schedules"
    },
    {
      "description": "Get shift details",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "get_shift_details"
    },
    {
      "description": "Get current on-call users",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "get_current_oncall_users"
    },
    {
      "description": "List teams and users",
      "inputschema": {
        "properties": {},
        "type": "object"
      },
      "name": "list_teams_and_users"
    }
  ],
  "version_detail": {
    "is_latest": true,
    "release_date": "2025-05-16T18:59:19Z",
    "version": "0.0.1-seed"
  },
  "versionid": "1",
  "xid": "/mcpproviders/grafana/servers/mcp-grafana/versions/1"
}