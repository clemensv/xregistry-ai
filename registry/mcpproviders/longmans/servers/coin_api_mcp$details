{
  "ancestor": "1",
  "createdat": "2025-05-27T13:01:00.993945195Z",
  "description": "A Model Context Protocol server that provides access to CoinMarketCap's cryptocurrency data. This server enables AI-powered applications to retrieve cryptocurrency listings, quotes, and detailed information about various coins.",
  "epoch": 1,
  "id": "28fc08e1-1afc-42cb-8eca-0b500e23c73e",
  "isdefault": true,
  "metaurl": "https://mcpxreg.com/registry/mcpproviders/longmans/servers/coin_api_mcp/meta",
  "modifiedat": "2025-05-27T13:01:00.993945195Z",
  "name": "io.github.longmans/coin_api_mcp",
  "packages": [
    {
      "environment_variables": [
        {
          "description": "your_api_key_here",
          "name": "COINMARKETCAP_API_KEY"
        }
      ],
      "name": "coin-api-mcp",
      "package_arguments": [
        {
          "default": "-m coin_api_mcp",
          "description": "-m coin_api_mcp",
          "format": "string",
          "is_required": true,
          "name": "-m coin_api_mcp",
          "type": "named",
          "value": "-m coin_api_mcp",
          "value_hint": "coin_api_mcp"
        }
      ],
      "registry_name": "unknown",
      "version": "0.1.0"
    }
  ],
  "prompts": [],
  "repository": {
    "id": "903449956",
    "source": "github",
    "url": "https://github.com/longmans/coin_api_mcp"
  },
  "resources": [],
  "self": "https://mcpxreg.com/registry/mcpproviders/longmans/servers/coin_api_mcp",
  "serverid": "coin_api_mcp",
  "tools": [
    {
      "description": "Returns a paginated list of all active cryptocurrencies with latest market data",
      "inputschema": {
        "properties": {
          "aux": {
            "description": "Optionally specify a comma-separated list of supplemental data fields to return.",
            "type": "string"
          },
          "circulating_supply_max": {
            "description": "Optionally specify a threshold of maximum circulating supply to filter results by.",
            "minimum": 0,
            "type": "number"
          },
          "circulating_supply_min": {
            "description": "Optionally specify a threshold of minimum circulating supply to filter results by.",
            "minimum": 0,
            "type": "number"
          },
          "convert": {
            "description": "Optionally calculate market quotes in up to 120 currencies at once by passing a comma-separated list of cryptocurrency or fiat currency symbols.",
            "type": "string"
          },
          "convert_id": {
            "description": "Optionally calculate market quotes by CoinMarketCap ID instead of symbol.",
            "type": "string"
          },
          "cryptocurrency_type": {
            "description": "The type of cryptocurrency to include.",
            "enum": [
              "all",
              "coins",
              "tokens"
            ],
            "type": "string"
          },
          "limit": {
            "description": "Optionally specify the number of results to return.",
            "maximum": 5000,
            "minimum": 1,
            "type": "integer"
          },
          "market_cap_max": {
            "description": "Optionally specify a threshold of maximum market cap to filter results by.",
            "minimum": 0,
            "type": "number"
          },
          "market_cap_min": {
            "description": "Optionally specify a threshold of minimum market cap to filter results by.",
            "minimum": 0,
            "type": "number"
          },
          "percent_change_24h_max": {
            "description": "Optionally specify a threshold of maximum 24 hour percent change to filter results by.",
            "minimum": -100,
            "type": "number"
          },
          "percent_change_24h_min": {
            "description": "Optionally specify a threshold of minimum 24 hour percent change to filter results by.",
            "minimum": -100,
            "type": "number"
          },
          "price_max": {
            "description": "Optionally specify a threshold of maximum USD price to filter results by.",
            "minimum": 0,
            "type": "number"
          },
          "price_min": {
            "description": "Optionally specify a threshold of minimum USD price to filter results by.",
            "minimum": 0,
            "type": "number"
          },
          "sort": {
            "description": "What field to sort the list of cryptocurrencies by.",
            "enum": [
              "market_cap",
              "name",
              "symbol",
              "date_added",
              "market_cap_strict",
              "price",
              "circulating_supply",
              "total_supply",
              "max_supply",
              "num_market_pairs",
              "volume_24h",
              "percent_change_1h",
              "percent_change_24h",
              "percent_change_7d",
              "market_cap_by_total_supply_strict",
              "volume_7d",
              "volume_30d"
            ],
            "type": "string"
          },
          "sort_dir": {
            "description": "The direction in which to order cryptocurrencies against the specified sort.",
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string"
          },
          "start": {
            "description": "Optionally offset the start (1-based index) of the paginated list of items to return.",
            "minimum": 1,
            "type": "integer"
          },
          "tag": {
            "description": "The tag of cryptocurrency to include.",
            "enum": [
              "all",
              "defi",
              "filesharing"
            ],
            "type": "string"
          },
          "volume_24h_max": {
            "description": "Optionally specify a threshold of maximum 24 hour USD volume to filter results by.",
            "minimum": 0,
            "type": "number"
          },
          "volume_24h_min": {
            "description": "Optionally specify a threshold of minimum 24 hour USD volume to filter results by.",
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [],
        "type": "object"
      },
      "name": "listing-coins"
    },
    {
      "description": "Get coins' information includes details like logo, description, official website URL, social links, and links to a cryptocurrency's technical documentation.",
      "inputschema": {
        "properties": {
          "address": {
            "description": "Alternatively pass in a contract address. Example: \"0xc40af1e4fecfa05ce6bab79dcd8b373d2e436c4e\"",
            "type": "string"
          },
          "aux": {
            "description": "Optionally specify a comma-separated list of supplemental data fields to return. Pass urls,logo,description,tags,platform,date_added,notice,status to include all auxiliary fields.",
            "type": "string"
          },
          "id": {
            "description": "One or more comma-separated CoinMarketCap cryptocurrency IDs. Example: \"1,2\"",
            "type": "string"
          },
          "skip_invalid": {
            "default": false,
            "description": "Pass true to relax request validation rules. When requesting records on multiple cryptocurrencies an error is returned if any invalid cryptocurrencies are requested or a cryptocurrency does not have matching records in the requested timeframe. If set to true, invalid lookups will be skipped allowing valid cryptocurrencies to still be returned.",
            "type": "boolean"
          },
          "slug": {
            "description": "Alternatively pass a comma-separated list of cryptocurrency slugs. Example: \"bitcoin,ethereum\"",
            "type": "string"
          },
          "symbol": {
            "description": "Alternatively pass one or more comma-separated cryptocurrency symbols. Example: \"BTC,ETH\"",
            "type": "string"
          }
        },
        "required": [],
        "type": "object"
      },
      "name": "get-coin-info"
    },
    {
      "description": "the latest market quote for 1 or more cryptocurrencies. Use the \"convert\" option to return market values in multiple fiat and cryptocurrency conversions in the same call.",
      "inputschema": {
        "properties": {
          "aux": {
            "description": "\"num_market_pairs,cmc_rank,date_added,tags,platform,max_supply,circulating_supply,total_supply,is_active,is_fiat\"Optionally specify a comma-separated list of supplemental data fields to return.",
            "type": "string"
          },
          "convert": {
            "description": "Optionally calculate market quotes in up to 120 currencies at once by passing a comma-separated list of cryptocurrency or fiat currency symbols.",
            "type": "string"
          },
          "convert_id": {
            "description": "Optionally calculate market quotes by CoinMarketCap ID instead of symbol. This option is identical to convert outside of ID format.",
            "type": "string"
          },
          "id": {
            "description": "One or more comma-separated cryptocurrency CoinMarketCap IDs. Example: 1,2",
            "type": "string"
          },
          "skip_invalid": {
            "default": false,
            "description": "Pass true to relax request validation rules.",
            "type": "boolean"
          },
          "slug": {
            "description": "Alternatively pass a comma-separated list of cryptocurrency slugs. Example: \"bitcoin,ethereum\"",
            "type": "string"
          },
          "symbol": {
            "description": "Alternatively pass one or more comma-separated cryptocurrency symbols. Example: \"BTC,ETH\"",
            "type": "string"
          }
        },
        "required": [],
        "type": "object"
      },
      "name": "get-coin-quotes"
    }
  ],
  "version_detail": {
    "is_latest": true,
    "release_date": "2025-05-16T19:04:46Z",
    "version": "0.0.1-seed"
  },
  "versionid": "1",
  "versionscount": 1,
  "versionsurl": "https://mcpxreg.com/registry/mcpproviders/longmans/servers/coin_api_mcp/versions",
  "xid": "/mcpproviders/longmans/servers/coin_api_mcp"
}